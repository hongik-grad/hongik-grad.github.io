{"version":3,"sources":["config.ts","modules/auth.ts","components/Spinner.tsx","components/input/Input.tsx","components/button/Button.tsx","components/Login.tsx","modules/menu.ts","components/Footer.tsx","components/button/TextLink.tsx","components/button/LoginButton.tsx","components/button/TextButton.tsx","components/button/LogoutButton.tsx","components/LogoButton.tsx","components/Header.tsx","components/PageTemplate.tsx","pages/LoginPage.tsx","components/button/MenuButton.tsx","pages/MainPage.tsx","GlobalStyles.tsx","components/table/Table.tsx","pages/TakenPage.tsx","components/button/TitleButton.tsx","components/Divider.tsx","pages/GraduationPage.tsx","components/input/SearchInput.tsx","components/button/SearchButton.tsx","pages/CoursesPage.tsx","lib/ProtectedRoute.tsx","components/table/EditableCourseTable.tsx","components/table/EditableMajorTable.tsx","components/table/EditableMajorCourseTable.tsx","pages/AdminPage.tsx","App.tsx","reportWebVitals.ts","modules/index.ts","index.tsx"],"names":["API_BASE_URL","process","LOGIN_USER","LOGOUT_USER","logoutUser","type","initialState","state","isLogin","spin","keyframes","StyledSpinner","styled","div","Circle","Spinner","props","StyledInput","input","width","height","Input","StyledButton","button","color","Button","hover","children","LoginWrapper","form","Notice","style","href","target","rel","Login","useState","id","setId","pw","setPw","loading","setLoading","authAlert","setAuthAlert","dispatch","useDispatch","navigate","useNavigate","onSubmit","e","preventDefault","data","USER_ID","toLowerCase","PASSWD","axios","post","BASE_URL","withCredentials","then","res","status","catch","Stack","direction","spacing","tabIndex","placeholder","onChange","value","TOGGLE_MENU","CLOSE_MENU","open","menu","action","Block","GithubLogo","img","StyledLink","a","Footer","src","Link","TextLink","LoginButton","to","TextButton","LogoutButton","onClick","span","LogoButton","HeaderWrapper","Header","useSelector","auth","PageStyle","StyledBody","PageTemplate","setVh","document","documentElement","setProperty","window","innerHeight","addEventListener","React","LoginPage","useEffect","MenuButton","text","MainPage","GlobalStyles","createGlobalStyle","StyledTable","table","Table","rows","columns","map","column","index","row","year","semester","substring","hakgi","url","number","name","credit","TakenPage","Props","totalCount","setTotalCount","totalCredit","setTotalCredit","courses","setCourses","isError","setError","get","TitleButton","Divider","borderTop","config","bold","fontWeight","satisfied","notSatisfied","GraduationWrapper","StyledSelect","select","NotFound","MajorSelection","majorList","major","enable","AbeekSelection","EnterYearSelection","CourseList","length","SubField","subfield","field","courseList","alignItems","GraduationRequirements","requirements","req","subField","isSatisfied","mainField","className","briefing","GraduationPage","takenCourseTab","setOpenCourseTab","graduationCheckTab","setGraduationCheckTab","majorId","setMajorId","setMajorList","abeek","setAbeek","setRequirements","isDone","setDone","load","setLoad","enterYear","setEnterYear","setTimeout","justifyContent","isAbeek","alert","SearchInput","SearchButton","SearchTypeSelection","CoursesPage","setRows","searchInput","setSearchInput","hasSearch","setHasSearch","searchCount","setSearchCount","useSearchParams","searchParams","searchType","setSearchType","handleSearchButton","search","keyword","count","useLayoutEffect","majorListUrl","init","defaultNotice","searchNotice","onKeyPress","key","ProtectedRoute","outlet","EditableCourseTable","handleAddButton","columnType","courseId","TableData","td","TableButton","EditableMajorTable","rowsHandler","changeToggle","setChangeToggle","addMajorInput","setAddMajorInput","edit","setEdit","majorNameInput","setMajorNameInput","collegeInput","setCollegeInput","add","setAdd","checked","setChecked","majorCodeInput","setMajorCodeInput","handleModifyMajorButton","handleMajorNameInput","handleCollegeInput","handleMajorCodeInput","handleDoneSlaveButton","handleCheckbox","console","log","slaveList","college","code","patch","enableToggle","handleEnableButton","colSpan","handleAddSlaveButton","majorName","finally","handleSaveMajorButton","delete","handleDeleteButton","slave","slaveId","handleSlaveDeleteButton","handleAddMajorCourseButton","EditableMajorCourseTable","AdminPage","majorCourseList","setMajorCourseList","majorCourseListUrl","command","event","toUpperCase","App","location","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","__REDUX_STATE__","composeWithDevTools","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53517062.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API;\nexport const HOME_URL = process.env.REACT_APP_HOME;\n","import axios from \"axios\";\nimport qs from \"qs\";\nimport * as config from \"../config\";\n\nconst LOGIN_USER = \"USER/login_user\";\nconst LOGOUT_USER = \"USER/logout_user\";\nconst AUTH_USER = \"USER/auth\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\n// type LoginDataProps = {\n//   USER_ID: string;\n// };\n\ntype LoginDataProps = {\n  isLogin: boolean;\n};\n\nexport function loginUser() {\n  return {\n    type: LOGIN_USER,\n    // payload: isLogin,\n  };\n}\n\nexport function logoutUser() {\n  // const request = axios.delete(`auth/token`).then((response) => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    // payload: false,\n  };\n}\n\nexport function auth() {\n  const request = axios.get(`auth/token`).then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\ntype AuthAction =\n  | ReturnType<typeof loginUser>\n  | ReturnType<typeof logoutUser>\n  | ReturnType<typeof auth>;\n\ntype AuthState = {\n  state: boolean;\n  isLogin: boolean;\n};\n\nconst initialState: AuthState = {\n  state: false,\n  isLogin: false,\n};\n\nexport default function (state: AuthState = initialState, action: AuthAction) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, isLogin: true };\n    // case AUTH_USER:\n    //   return { ...state, userData: action.payload };\n    case LOGOUT_USER:\n      return { ...state, isLogin: false };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\n\nimport styled, { keyframes } from \"styled-components\";\n\nexport interface SpinnerProps {}\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledSpinner = styled.div`\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 5rem;\n  height: 5rem;\n\n  border: 8px solid transparent;\n  border-radius: 50%;\n  border-top-color: #d3d3d3;\n  border-bottom-color: #d3d3d3;\n\n  transition: 3s;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst Circle = styled.div`\n  width: 3rem;\n  height: 3rem;\n  background-color: #fff;\n  border-radius: 50%;\n`;\n\nexport default function Spinner(props: SpinnerProps) {\n  return (\n    <StyledSpinner>\n      <Circle />\n    </StyledSpinner>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nexport interface InputProps {\n  children?: React.ReactNode;\n  width?: number;\n  height?: number;\n}\n\nconst StyledInput = styled.input<{\n  width?: number;\n  height?: number;\n}>`\n  width: ${({ width }) => (width ? width : 15)}rem;\n  height: ${({ height }) => (height ? height : 4)}rem;\n  border: 0.1rem black solid;\n  font-size: inherit;\n  font-family: \"Noto Sans KR\", sans-serif;\n\n  padding: 1rem;\n\n  ::-webkit-input-placeholder {\n    transition: all 1s, color 0.5s;\n  }\n\n  ::placeholder {\n    opacity: 1;\n  }\n\n  :focus {\n    ::-webkit-input-placeholder {\n      transition: all 1s, color 0.5s;\n      color: transparent;\n    }\n  }\n\n  :hover {\n    ::-webkit-input-placeholder {\n      transition: all 1.5s, color 0.5s;\n      opacity: 0.3;\n    }\n  }\n\n  border-radius: 0.5rem;\n`;\n\nexport default function Input(props: any) {\n  return <StyledInput {...props} />;\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{\n  width?: number;\n  height?: number;\n  color?: string;\n  hover?: boolean;\n}>`\n  width: ${({ width }) => (width ? width : 15)}rem;\n  height: ${({ height }) => (height ? height : 4)}rem;\n  // margin: 0.1rem;\n  border: 0.1rem black solid;\n\n  cursor: pointer;\n  color: #333;\n  transition: all 0.9s, color 0.3s;\n  font-size: inherit;\n\n  :hover {\n    opacity: 0.7;\n  }\n  :active {\n    transition: all 0.1s;\n    background-color: #808080;\n  }\n\n  background-color: ${({ color }) => (color ? color : \"#c0c0c0\")};\n\n  font-weight: 700;\n  border-radius: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default function Button(props: any) {\n  return (\n    <StyledButton\n      width={props.width}\n      height={props.height}\n      color={props.color}\n      hover={props.hover}\n      {...props}>\n      {props?.children}\n    </StyledButton>\n  );\n}\n","import { Console } from \"console\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport * as config from \"../config\";\nimport { useNavigate } from \"react-router\";\nimport { loginUser } from \"../modules/auth\";\nimport Spinner from \"./Spinner\";\nimport Input from \"./input/Input\";\nimport Button from \"./button/Button\";\nimport { Stack } from \"@mui/material\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\nexport interface LoginProps {}\n\nconst LoginWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0.1rem;\n`;\n\nfunction Notice(props: any) {\n  return (\n    <>\n      <div style={{ width: \"26rem\" }}>\n        <div>본 사이트는 아이디, 비밀번호를 수집하지 않습니다!</div>\n        <div>\n          Jsoup을 통해 얻어진 쿠키를 이용해 로그인 처리를 하며, 모든 코드는{\" \"}\n          <a\n            href=\"https://github.com/hongikgrad\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            GitHub\n          </a>\n          에 올라가 있습니다.\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default function Login(props: LoginProps) {\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [authAlert, setAuthAlert] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitHandler = (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    const data = { USER_ID: id.toLowerCase(), PASSWD: pw };\n    const config = {\n      withCredentials: true,\n    };\n\n    axios\n      .post(BASE_URL + \"/auth/token\", data, config)\n      .then((res) => {\n        setLoading(false);\n        if (res.status == 200) {\n          dispatch(loginUser());\n          navigate(-1);\n        } else {\n          setAuthAlert(true);\n        }\n      })\n      .catch(() => {\n        setAuthAlert(true);\n        setLoading(false);\n      });\n  };\n\n  const onIdHandler = (e: any) => {\n    setId(e.target.value);\n  };\n\n  const onPwHandler = (e: any) => {\n    setPw(e.target.value);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Notice />\n          <LoginWrapper onSubmit={onSubmitHandler}>\n            <Stack direction=\"column\" spacing=\"0.5rem\">\n              <Input\n                tabIndex={1}\n                width={26}\n                placeholder=\"학번을 입력하세요.\"\n                onChange={onIdHandler}\n              />\n              <Input\n                tabIndex={2}\n                width={26}\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요.\"\n                onChange={onPwHandler}\n              />\n              <Button type=\"submit\" tabIndex={3} width={26}>\n                로그인\n              </Button>\n            </Stack>\n          </LoginWrapper>\n          {authAlert && (\n            <React.Fragment>\n              <br />\n              <div>계속해서 로그인에 실패하신다면</div>\n              <div>\n                <a href=\"https://www.hongik.ac.kr/login.do\"> 여기 </a> 에서\n                로그인을 해주시고 다시 시도해주세요.\n              </div>\n            </React.Fragment>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","const TOGGLE_MENU = \"menu/TOGGLE\" as const;\nconst CLOSE_MENU = \"menu/CLOSE\" as const;\n\nexport const ToggleMenu = () => ({\n  type: TOGGLE_MENU,\n});\n\nexport const setMenuClose = () => ({\n  type: CLOSE_MENU,\n});\n\ntype MenuState = {\n  open: boolean;\n};\n\nconst initialState: MenuState = {\n  open: false,\n};\n\ntype MenuAction =\n  | ReturnType<typeof ToggleMenu>\n  | ReturnType<typeof setMenuClose>;\n\nfunction menu(state: MenuState = initialState, action: MenuAction) {\n  switch (action.type) {\n    case TOGGLE_MENU:\n      return { open: !state.open };\n    case CLOSE_MENU:\n      return { open: false };\n    default:\n      return state;\n  }\n}\n\nexport default menu;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport interface FooterProps {}\n\nconst Block = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst GithubLogo = styled.img`\n  height: 2.5rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  transition: all 0.9s, color 0.3s;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-size: 1.75rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  text-decoration: none;\n  color: black;\n  font-weight: 900;\n  transition: all 1s, color 0.5s;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nexport default function Footer(props: FooterProps) {\n  return (\n    <Block>\n      <StyledLink\n        href=\"https://github.com/hongikgrad\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        &lt;/&gt;\n      </StyledLink>\n      <a\n        href=\"https://github.com/ujunhwan\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <GithubLogo src=\"https://cdn-icons-png.flaticon.com/512/25/25231.png\" />\n      </a>\n    </Block>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButton = styled.button<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n`;\n\nexport default function TextLink(props: any) {\n  return <StyledLink {...props}>{props.children}</StyledLink>;\n}\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport TextLink from \"./TextLink\";\n\nexport interface LoginButtonProps {}\n\nexport default function LoginButton(props: LoginButtonProps) {\n  return (\n    <TextLink width={1} to=\"/login\">\n      login\n    </TextLink>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n`;\n\nexport default function TextButton(props: any) {\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n}\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router\";\nimport { logoutUser } from \"../../modules/auth\";\nimport Button from \"./Button\";\nimport TextButton from \"./TextButton\";\n\nexport default function LogoutButton(props: any) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handlerLogout = () => {\n    dispatch(logoutUser());\n    navigate(\"/\");\n    // window.sessionStorage.setItem(\"login\", \"false\");\n  };\n  return (\n    <TextButton onClick={handlerLogout} width={1} height={1}>\n      logout\n    </TextButton>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport TextLink from \"./button/TextLink\";\n\nconst StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 34px;\n  :hover {\n    opacity: 0.5;\n  }\n  // @media (max-width: 768px) {\n  //   color: black;\n  //   font-size: 20px;\n  // }\n`;\n\nconst Point = styled.span`\n  color: #8b00ff;\n`;\n\nexport interface LogoProps {}\n\nexport default function LogoButton(props: LogoProps) {\n  return (\n    <TextLink to=\"/\" width={2}>\n      hongikgrad\n    </TextLink>\n  );\n}\n","import { Stack } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../modules\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport LoginButton from \"./button/LoginButton\";\nimport LogoutButton from \"./button/LogoutButton\";\nimport LogoButton from \"./LogoButton\";\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 26rem;\n`;\n\nexport interface HeaderProps {}\n\nexport default function Header(props: HeaderProps) {\n  const isLogin = useSelector((state: RootState) => state.auth.isLogin);\n  return (\n    <HeaderWrapper>\n      <LogoButton />\n      {/* <BurgerMenu /> */}\n      {isLogin ? <LogoutButton /> : <LoginButton />}\n    </HeaderWrapper>\n  );\n}\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../modules\";\nimport { setMenuClose, ToggleMenu } from \"../modules/menu\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n\nconst PageStyle = styled.div`\n  min-height: calc(var(--vh) * 100);\n  background-color: white;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  transition: opacity 0.3s;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-family: \"Noto Sans KR\", sans-serif;\n`;\n\nexport interface PageTemplateProps {\n  children?: React.ReactNode;\n}\n\nexport default function PageTemplate(props: PageTemplateProps) {\n  const dispatch = useDispatch();\n  const setVh = () => {\n    document.documentElement.style.setProperty(\n      \"--vh\",\n      `${window.innerHeight * 0.01}px`\n    );\n  };\n  window.addEventListener(\"resize\", setVh);\n\n  React.useEffect(() => {\n    setVh();\n    dispatch(setMenuClose());\n  }, []);\n  return (\n    <PageStyle id=\"layout\">\n      {/* <Menu /> */}\n      <Header />\n      <StyledBody id=\"content\">{props.children}</StyledBody>\n      <Footer />\n    </PageStyle>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Login from \"../components/Login\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { logoutUser } from \"../modules/auth\";\n\nexport interface LoginPageProps {}\n\nexport default function LoginPage(props: LoginPageProps) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(logoutUser());\n  }, []);\n  return (\n    <PageTemplate>\n      <Login />\n    </PageTemplate>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nexport default function MenuButton(props: any) {\n  return (\n    <Link to={props.href}>\n      <Button width={26} height={5} color=\"#e5e5e5\">\n        {props.text}\n      </Button>\n    </Link>\n  );\n}\n","import * as React from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { Stack } from \"@mui/material\";\nimport MenuButton from \"../components/button/MenuButton\";\n\nexport interface MainPageProps {}\n\nexport default function MainPage(props: MainPageProps) {\n  return (\n    <PageTemplate>\n      <Stack spacing={\"0.5rem\"}>\n        <MenuButton text=\"졸업요건 검사하기\" href=\"/users/graduation\" />\n        <MenuButton text=\"등록된 과목 보기\" href=\"/courses\" />\n      </Stack>\n    </PageTemplate>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\nhtml {\n  font-size: 30px;\n  width: 100%;\n}\n\n@media screen and (max-width: 2559px) {\n    html {\n        font-size: 20px;\n    }\n}\n\n@media screen and (max-width: 1023px) {\n    html {\n        font-size: 16px;\n    }\n}\n\n@media screen and (max-width: 767px) {\n    html {\n        font-size: 12px;\n    }\n}\n\nbody {\n  margin: 0px;\n  padding: 0px;\n  font-family: Montserrat, Noto Sans KR, GothamSSmBook, -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Apple SD Gothic Neo\", \"Malgun Gothic\", \"맑은 고딕\", 나눔고딕, \"Nanum Gothic\", \"Noto Sans KR\", \"Noto Sans CJK KR\", arial, 돋움, Dotum, Tahoma, Geneva, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #212529;\n  box-sizing: border-box;\n  background-color:#ffffff;\n  height:inherit;\n  white-space : pre-line;\n}\n* {\n  box-sizing: inherit;\n}\ncode {\n  font-family: 'Fira Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\ninput, button, textarea {\n  font-family: inherit;\n  :focus {\n    outline:none;\n  }\n}\nhtml, body, #root {\n}\n\na {\n  -webkit-tap-highlight-color : transparent;\n  text-decoration:none\n}\n\na:link {\n  color: #333;\n}\n\na:visited {\n  color: #000;\n}\n\na:hover {\n  color: #808080;\n}\n\na:active {\n  color: #808080;\n}\n`;\n\nexport default GlobalStyles;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  td {\n    width: 2rem;\n    padding: 0.3rem;\n    // border-bottom: 1px solid black;\n    border-bottom: 0.1rem solid black;\n    a:link {\n      color: #333;\n    }\n    a:visited {\n      color: #000;\n    }\n    a:hover {\n      color: #808080;\n    }\n    a:active {\n      color: #808080;\n    }\n  }\n\n  tbody {\n    width: 25rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport default function Table(props: any) {\n  const rows = props.rows;\n  const columns = props.columns;\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any) => {\n          const year =\n            typeof row.semester === \"string\"\n              ? row.semester.substring(0, 4)\n              : \"\";\n          const hakgi =\n            typeof row.semester === \"string\" ? row.semester.substring(4) : \"\";\n          const url =\n            typeof row.semester === \"string\"\n              ? `https://sugang.hongik.ac.kr/cn13061.jsp?yy=${year}&hakgi=${hakgi}&haksu=${row.number}&bunban=1`\n              : \"/\";\n          return (\n            <tr key={row.number + row.credit}>\n              <td>\n                <a\n                  key={row}\n                  href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  {row.name}\n                </a>\n              </td>\n\n              <td>{row.number}</td>\n              <td>{row.credit}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../components/button/Button\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport Table from \"../components/table/Table\";\nimport { API_BASE_URL } from \"../config\";\nimport { RootState } from \"../modules\";\n\ninterface Props {}\n\nexport default function TakenPage(Props: Props) {\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [totalCredit, setTotalCredit] = useState<number>(0);\n  const [courses, setCourses] = useState<any>([]);\n  const [isError, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const url = API_BASE_URL + \"/users/courses\";\n    const config = {\n      withCredentials: true,\n    };\n    axios\n      .get(url, config)\n      .then((res) => {\n        setTotalCount(res.data.totalCount);\n        setTotalCredit(res.data.totalCredit);\n        setCourses([...res.data.courses]);\n      })\n      .catch((e) => {\n        setError(true);\n      });\n  }, []);\n\n  return (\n    <>\n      <PageTemplate>\n        {isError && <div>error T.T</div>}\n        {totalCount == 0 ? (\n          <></>\n        ) : (\n          <>\n            <div>{totalCount}개의 강의를 수강하셨습니다.</div>\n            <div>{totalCredit}학점을 들으셨습니다.</div>\n            <Table rows={courses} columns={[\"강의명\", \"학수번호\", \"학점\"]} />\n          </>\n        )}\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  background-color: transparent;\n  border: none;\n`;\n\nexport default function TitleButton(props: any) {\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n}\n","import * as React from \"react\";\n\nexport interface DividerProps {}\n\nexport default function Divider(props: DividerProps) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        borderTop: \"0.5px solid #808080 \",\n      }}></div>\n  );\n}\n","import { Stack } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router\";\nimport Button from \"../components/button/Button\";\nimport TextButton from \"../components/button/TextButton\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport Spinner from \"../components/Spinner\";\nimport Table from \"../components/table/Table\";\nimport { API_BASE_URL } from \"../config\";\nimport TitleButton from \"../components/button/TitleButton\";\nimport Divider from \"../components/Divider\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {}\n\nconst config = {\n  withCredentials: true,\n};\n\nconst bold = {\n  fontWeight: 700,\n};\n\nconst satisfied = {\n  color: \"black\",\n};\n\nconst notSatisfied = {\n  color: \"red\",\n};\n\nconst GraduationWrapper = styled.div`\n  width: 26rem;\n`;\n\nconst StyledSelect = styled.select<{ width?: number }>`\n  width: ${({ width }) => (width ? width : 12)}rem;\n  height: 2rem;\n  text-align-last: center;\n  text-align: center;\n  border: 0.1rem black solid;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  font-weight: 700;\n`;\n\nfunction NotFound(props: any) {\n  return <div style={{ width: \"100%\" }}>수강한 과목이 없습니다.</div>;\n}\n\nfunction MajorSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange} width={12}>\n      <option value={-1}>전공을 선택해주세요.</option>\n      {majorList.map((major: any, index: number) => {\n        return (\n          major.enable == 1 && (\n            <option key={index} value={major.id}>\n              {major.name}\n            </option>\n          )\n        );\n      })}\n    </StyledSelect>\n  );\n}\n\nfunction AbeekSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  return (\n    <StyledSelect name=\"abeek\" onChange={onChange} width={5}>\n      <option value=\"false\">비공학</option>\n      <option value=\"true\">공학</option>\n    </StyledSelect>\n  );\n}\n\nfunction EnterYearSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  return (\n    <StyledSelect onChange={onChange} width={4}>\n      <option value=\"16\">16</option>\n      <option value=\"17\">17</option>\n      <option value=\"18\">18</option>\n      <option value=\"19\">19</option>\n      <option value=\"20\">20</option>\n      <option value=\"21\">21</option>\n      <option value=\"22\">22</option>\n    </StyledSelect>\n  );\n}\n\nfunction CourseList(props: any) {\n  const courses = props.courses;\n  return (\n    <>\n      {courses && courses.length > 0 ? (\n        <Table rows={courses} columns={[\"강의명\", \"학수번호\", \"학점\"]} />\n      ) : (\n        <NotFound />\n      )}\n    </>\n  );\n}\n\nfunction SubField(props: any) {\n  const subfield = props.subfield;\n  return (\n    <>\n      {subfield &&\n        subfield.map((field: any, index: number) => {\n          const courses: any = field.courseList;\n          const url: string = field.url;\n          return (\n            <Stack\n              key={index}\n              alignItems=\"flex-start\"\n              spacing=\"1rem\"\n              width=\"100%\">\n              <Link to={url}>\n                <h3>{field.field}</h3>\n              </Link>\n              <CourseList courses={courses} />\n              <br />\n              <br />\n            </Stack>\n          );\n        })}\n    </>\n  );\n}\n\nfunction GraduationRequirements(props: any) {\n  const requirements = props.requirements;\n\n  return (\n    <>\n      {requirements.map((req: any, index: number) => {\n        const subfield: any = req.subField;\n        return (\n          <Stack alignItems=\"center\" key={index} width=\"100%\">\n            <div style={req.isSatisfied ? satisfied : notSatisfied}>\n              <h2>{req.mainField}</h2>\n              {req.totalCount && (\n                <div>\n                  <span style={bold}>{req.totalCredit}</span>학점 수강\n                </div>\n              )}\n            </div>\n            <div\n              className=\"briefing\"\n              style={req.isSatisfied ? satisfied : notSatisfied}>\n              <div>{req.briefing}</div>\n            </div>\n            <div className=\"subfields\" style={{ width: \"100%\" }}>\n              <SubField subfield={subfield} />\n            </div>\n            <br />\n            <Divider />\n          </Stack>\n        );\n      })}\n    </>\n  );\n}\n\nexport default function GraduationPage(Props: Props) {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [totalCredit, setTotalCredit] = useState<number>(0);\n  const [courses, setCourses] = useState<any>([]);\n  const [takenCourseTab, setOpenCourseTab] = useState<boolean>(true);\n  const [graduationCheckTab, setGraduationCheckTab] = useState<boolean>(false);\n\n  const [majorId, setMajorId] = useState<number>(-1);\n  const [majorList, setMajorList] = useState<Array<any>>([]);\n  const [abeek, setAbeek] = useState<string>(\"false\");\n  const [requirements, setRequirements] = useState<any>([]);\n  const [isDone, setDone] = useState<boolean>(false);\n  const [load, setLoad] = useState<number>(0);\n  const [enterYear, setEnterYear] = useState<number>(16);\n\n  const handleTakenCourseTab = () => {\n    setOpenCourseTab(!takenCourseTab);\n  };\n\n  const handleGraduationCheckTab = () => {\n    setGraduationCheckTab(!graduationCheckTab);\n  };\n\n  const handleMajorSelect = (e: any) => {\n    setMajorId(e.target.value);\n  };\n\n  const handleAbeekSelect = (e: any) => {\n    setAbeek(e.target.value);\n  };\n\n  const handleEnterYearSelect = (e: any) => {\n    setEnterYear(e.target.value);\n  };\n\n  const handleLoadButton = () => {\n    const url = API_BASE_URL + `/users/courses`;\n    const config = {\n      withCredentials: true,\n    };\n    axios\n      .post(url, null, config)\n      .then((res) => {\n        setCourses([...res.data.courses]);\n        setTotalCount(res.data.totalCount);\n        setTotalCredit(res.data.totalCredit);\n        setLoad(load + 1);\n        alert(\"과목 불러오기 성공!\");\n      })\n      .catch((e) => {\n        alert(\"과목 불러오기 실패\\n문제가 계속 되시면 다시 로그인 해주세요!\");\n      });\n  };\n\n  const handleGraduationCheckButton = () => {\n    const url = `${API_BASE_URL}/users/graduation`;\n    const data = {\n      // major\n      majorId: majorId,\n      isAbeek: abeek,\n      courseList: courses,\n      enterYear: enterYear,\n    };\n    if (majorId != -1) {\n      axios\n        .post(url, data, config)\n        .then((res) => {\n          setRequirements([...res.data]);\n        })\n        .then(() => {\n          setGraduationCheckTab(true);\n          setDone(true);\n        });\n    } else {\n      alert(\"전공을 선택해주세요.\");\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n\n    const url = `${API_BASE_URL}/majors`;\n    axios.get(url, config).then((res) => {\n      setMajorList([...res.data]);\n    });\n\n    const loadUrl = API_BASE_URL + `/users/courses`;\n    axios\n      .post(loadUrl, null, config)\n      .then((res) => {\n        setCourses([...res.data.courses]);\n        setTotalCount(res.data.totalCount);\n        setTotalCredit(res.data.totalCredit);\n        setLoad(load + 1);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <PageTemplate>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <Stack spacing=\"1rem\" justifyContent=\"center\" alignItems=\"center\">\n              <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                spacing=\"0.1rem\"\n                width=\"100%\">\n                <EnterYearSelection onChange={handleEnterYearSelect} />\n                <MajorSelection\n                  onChange={handleMajorSelect}\n                  majorList={majorList}\n                />\n                <AbeekSelection onChange={handleAbeekSelect} />\n                <Button\n                  onClick={handleGraduationCheckButton}\n                  color=\"#fff\"\n                  width={6}\n                  height={2}>\n                  검사하기\n                </Button>\n              </Stack>\n              <GraduationWrapper>\n                <TitleButton onClick={handleGraduationCheckTab}>\n                  <h1>졸업 요건</h1>\n                </TitleButton>\n                {load == 0 && (\n                  <div>\n                    <span style={bold}>수강 과목 불러오기</span> 버튼을\n                    눌러주세요!\n                  </div>\n                )}\n                {!isDone && (\n                  <>\n                    <div>\n                      학과와 (공학/비공학) 여부를 선택하신 후 <br />\n                      <span style={bold}>검사하기</span> 버튼을 눌러주세요!\n                    </div>\n                    <br />\n                  </>\n                )}\n                {graduationCheckTab && (\n                  <>\n                    <GraduationRequirements requirements={requirements} />\n                  </>\n                )}\n              </GraduationWrapper>\n              <TitleButton onClick={handleTakenCourseTab}>\n                <h1>수강 과목</h1>\n              </TitleButton>\n              {takenCourseTab && (\n                <>\n                  <div>\n                    <span style={bold}>{totalCount}</span>\n                    개의 강의를 수강하셨고{\" \"}\n                    <span style={bold}>{totalCredit}</span>\n                    학점을 들으셨습니다.\n                  </div>\n                  <Table\n                    rows={courses}\n                    columns={[\"강의명\", \"학수번호\", \"학점\"]}\n                  />\n                  {load == 0 && (\n                    <Button\n                      width={26}\n                      color=\"#e5e5e5\"\n                      onClick={handleLoadButton}>\n                      수강 과목 불러오기\n                    </Button>\n                  )}\n                </>\n              )}\n            </Stack>\n          </>\n        )}\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\n\nexport default function SearchInput(props: any) {\n  return <Input width={18} placeholder=\"과목을 검색하세요.\" {...props} />;\n}\n","import * as React from \"react\";\nimport Button from \"./Button\";\n\nexport default function SearchButton(props: any) {\n  return (\n    <Button width={6} height={4} color=\"#e5e5e5\" {...props}>\n      검색\n    </Button>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { Stack } from \"@mui/material\";\n\nimport styled from \"styled-components\";\n\nimport SearchInput from \"../components/input/SearchInput\";\nimport SearchButton from \"../components/button/SearchButton\";\nimport Table from \"../components/table/Table\";\nimport Divider from \"../components/Divider\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { API_BASE_URL } from \"../config\";\n\ninterface Props {}\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (event: any, number: number) => void;\n}\n\nconst StyledSelect = styled.select<{ width?: number; height?: number }>`\n  width: ${({ width }) => (width ? width : 12)}rem;\n  // height: 2rem;\n  height: ${({ height }) => (height ? height : 2)}rem;\n  text-align-last: center;\n  text-align: center;\n  border: 0.1rem black solid;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  font-weight: 700;\n`;\n\nconst config = { withCredentials: true };\n\ntype CourseType = {\n  name: string;\n  number: string;\n  credit: number;\n};\n\ntype CourseListType = {\n  [key: number]: CourseType;\n};\n\nconst bold = {\n  fontWeight: 700,\n};\n\nconst courseNameRegex = /^[가-힣a-zA-Z():]{2,}$/;\nconst courseNumberRegex = /^[0-9]{3,6}$/;\n\nfunction SearchTypeSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange} width={6} height={4}>\n      <option value=\"name\">과목명</option>\n      <option value=\"number\">학수번호</option>\n      <option value=\"major\">전공</option>\n    </StyledSelect>\n  );\n}\n\nfunction MajorSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList: any = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange} width={18} height={4}>\n      {majorList.map((major: any, index: number) => {\n        return (\n          <option value={major.id} key={index}>\n            {major.name}\n          </option>\n        );\n      })}\n    </StyledSelect>\n  );\n}\n\nexport default function CoursesPage(props: any) {\n  const [rows, setRows] = useState<Array<any>>([]);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [hasSearch, setHasSearch] = useState<boolean>(false);\n  const [searchCount, setSearchCount] = useState<number>(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchType, setSearchType] = useState<string>(\"name\");\n\n  const [majorList, setMajorList] = useState<Array<any>>([]);\n\n  const [majorSelect, setMajorSelect] = useState<number>(1);\n\n  const handleChangeSearchInput = (e: any) => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleSearchButton = () => {\n    search(searchType, searchInput);\n  };\n\n  const handleSearchTypeSelect = (e: any) => {\n    setSearchType(e.target.value);\n    setSearchInput(\"\");\n  };\n\n  function handleMajorSelect(e: any) {\n    setSearchInput(e.target.value);\n  }\n\n  const handleOnKeyPress = (e: any) => {\n    if (e.key == \"Enter\") {\n      handleSearchButton();\n    }\n  };\n\n  const search = (type: string, keyword: string) => {\n    const input = keyword ? keyword : searchInput;\n    if (type != \"major\" && input.length < 2) {\n      alert(\"2글자 이상 입력해주세요.\");\n      return;\n    }\n    const url = `${API_BASE_URL}/courses?type=${type}&keyword=${input}`;\n    axios.get(url, config).then((res) => {\n      const result = res.data;\n      const count = result.length;\n      setSearchCount(count);\n      setRows([...res.data]);\n      setHasSearch(true);\n    });\n  };\n\n  useLayoutEffect(() => {\n    const url = `${API_BASE_URL}/courses/count`;\n    axios.get(url).then((res) => {\n      setTotalCount(res.data);\n    });\n\n    const majorListUrl = `${API_BASE_URL}/majors`;\n    axios.get(majorListUrl, config).then((res) => {\n      setMajorList([...res.data]);\n    });\n  }, []);\n\n  const init = () => {\n    // 직접 접근\n    const keyword = searchParams.get(\"keyword\");\n    const type = searchParams.get(\"type\");\n\n    setSearchInput(keyword ? keyword : \"\");\n    if (keyword != null) search(type ? type : \"\", keyword ? keyword : \"\");\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const defaultNotice = `현재 ${totalCount}개의 수업이 등록되어 있습니다.`;\n  const searchNotice = `${searchCount}개의 수업이 검색 되었습니다.`;\n  return (\n    <>\n      <PageTemplate>\n        <Stack\n          direction=\"column\"\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"center\">\n          <div>{hasSearch ? searchNotice : defaultNotice}</div>\n          <Stack direction=\"row\" spacing={1}>\n            <SearchTypeSelection onChange={handleSearchTypeSelect} />\n            {searchType != \"major\" ? (\n              <SearchInput\n                onChange={handleChangeSearchInput}\n                value={searchInput}\n                onKeyPress={handleOnKeyPress}\n              />\n            ) : (\n              <MajorSelection\n                onChange={handleMajorSelect}\n                majorList={majorList}\n              />\n            )}\n            <SearchButton onClick={handleSearchButton} />\n          </Stack>\n          {searchCount > 0 && (\n            <Table rows={rows} columns={[\"과목명\", \"학수번호\", \"학점\"]} />\n          )}\n        </Stack>\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Navigate, Route } from \"react-router\";\n\nexport interface ProtectedRouteProps {}\n\nexport default function ProtectedRoute(props: any) {\n  return props.isLogin ? props.outlet : <Navigate to=\"/login\" />;\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  td {\n    width: 2rem;\n    padding: 0.3rem;\n    // border-bottom: 1px solid black;\n    border-bottom: 0.1rem solid black;\n    a:link {\n      color: #333;\n    }\n    a:visited {\n      color: #000;\n    }\n    a:hover {\n      color: #808080;\n    }\n    a:active {\n      color: #808080;\n    }\n  }\n\n  tbody {\n    width: 25rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport default function EditableCourseTable(props: any) {\n  const rows = props.rows;\n  const columns = props.columns;\n  const columnType = props.columnType;\n  const handleAddButton = props.handleAddButton;\n  const majorId = props.majorId;\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any, index: number) => {\n          const courseId = row.id;\n          return (\n            <tr key={index}>\n              <td>{row.name}</td>\n              <td>{row.number}</td>\n              <td>{row.credit}</td>\n              <td onClick={() => handleAddButton(majorId, courseId)}>추가</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport * as React from \"react\";\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { API_BASE_URL } from \"../../config\";\nimport Input from \"../input/Input\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  tbody {\n    width: 25rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst TableData = styled.td<{ width: number }>`\n  width: ${({ width }) => width}rem;\n  // border-bottom: 1px solid black;\n  border-bottom: 0.1rem solid black;\n  a:link {\n    color: #333;\n  }\n  a:visited {\n    color: #000;\n  }\n  a:hover {\n    color: #808080;\n  }\n  a:active {\n    color: #808080;\n  }\n`;\n\nconst TableButton = styled.td`\n  width: 0.5rem;\n  border-bottom: 0.1rem solid black;\n`;\n\nconst config = {\n  withCredentials: true,\n};\n\nexport default function EditableMajorTable(props: any) {\n  const majorId = props.majorId;\n  const rows = props.rows;\n  const rowsHandler = props.rowsHandler;\n  // const columns = props.columns;\n\n  const columns = [\"ID\", \"전공명\", \"단과대학\"];\n  const [changeToggle, setChangeToggle] = useState<boolean>(false);\n\n  const [addMajorInput, setAddMajorInput] = useState<string>(\"\");\n  const [edit, setEdit] = useState<number>(-1);\n\n  const [majorNameInput, setMajorNameInput] = useState<string>(\"\");\n  const [collegeInput, setCollegeInput] = useState<string>(\"\");\n\n  const [add, setAdd] = useState<number>(-1);\n\n  const [checked, setChecked] = useState<number>(-1);\n\n  const [majorCodeInput, setMajorCodeInput] = useState<string>(\"\");\n\n  const handleDeleteButton = (majorId: number) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}`;\n    axios\n      .delete(url, config)\n      .then(() => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"삭제에 실패하였습니다.\");\n      });\n  };\n\n  const handleAddMajorInput = (e: any) => {\n    setAddMajorInput(e.target.value);\n  };\n\n  const handleModifyMajorButton = (edit: number, majorId: number) => {\n    setMajorNameInput(\"\");\n    if (edit != majorId) setEdit(majorId);\n    else setEdit(-1);\n  };\n\n  const handleMajorNameInput = (e: any) => {\n    setMajorNameInput(e.target.value);\n  };\n\n  const handleCollegeInput = (e: any) => {\n    setCollegeInput(e.target.value);\n  };\n\n  const handleAddSlaveButton = (majorId: number) => {\n    setAdd(majorId);\n  };\n\n  const handleMajorCodeInput = (e: any) => {\n    setMajorCodeInput(e.target.value);\n  };\n\n  const handleDoneSlaveButton = () => {\n    const url = `${API_BASE_URL}/admin/majors/${add}/hierarchy/${checked}`;\n    axios\n      .post(url, null, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .then(() => {\n        setAdd(-1);\n        setChecked(-1);\n      });\n  };\n\n  const handleSaveMajorButton = (\n    majorId: number,\n    input: { majorName: string; college: string; code: string }\n  ) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}`;\n    const data = {\n      name: input.majorName,\n      college: input.college,\n      code: input.code,\n    };\n    axios\n      .patch(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"수정에 실패하였습니다.\");\n      })\n      .finally(() => {\n        setEdit(-1);\n      });\n  };\n\n  const handleAddMajorCourseButton = (majorName: string) => {\n    const url = `${API_BASE_URL}/admin/majors`;\n    const data = {\n      name: majorName,\n    };\n    axios\n      .post(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e) => {\n        console.log(e);\n        alert(\"전공 추가에 실패하였습니다.\");\n      });\n  };\n\n  const handleCheckbox = (e: any) => {\n    setChecked(e.target.value);\n  };\n\n  const handleSlaveDeleteButton = (majorId: number, slaveId: number) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}/hierarchy/${slaveId}`;\n    axios.delete(url, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  const handleEnableButton = (majorId: number) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}`;\n    const data = {\n      enableToggle: 1,\n    };\n    axios.patch(url, data, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  useEffect(() => {\n    const majorListUrl = `${API_BASE_URL}/admin/majors`;\n    axios.get(majorListUrl, config).then((res) => {\n      rowsHandler([...res.data]);\n      console.log(res.data);\n    });\n  }, [changeToggle]);\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {add == -1 ? <></> : <th></th>}\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n          <th>전공코드</th>\n\n          <th>en</th>\n          <th></th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any, index: number) => {\n          const slaveList = row.slaveList;\n          const majorId = row.id;\n          return (\n            <Fragment key={index}>\n              <tr>\n                {add == -1 ? (\n                  <></>\n                ) : (\n                  <>\n                    {add == majorId ? (\n                      <>\n                        <td></td>\n                      </>\n                    ) : (\n                      <>\n                        <TableData width={0.3}>\n                          <input\n                            type=\"checkbox\"\n                            name=\"_selected_\"\n                            value={row.id}\n                            onChange={handleCheckbox}\n                          />\n                        </TableData>\n                      </>\n                    )}\n                  </>\n                )}\n\n                <TableData width={0.3}>{row.id}</TableData>\n                {edit == majorId ? (\n                  <>\n                    <TableData width={2}>\n                      <Input\n                        value={majorNameInput}\n                        onChange={handleMajorNameInput}\n                      />\n                    </TableData>\n                    <TableData width={2}>\n                      <Input\n                        value={collegeInput}\n                        onChange={handleCollegeInput}\n                      />\n                    </TableData>\n                    <TableData width={2}>\n                      <Input\n                        value={majorCodeInput}\n                        onChange={handleMajorCodeInput}\n                      />\n                    </TableData>\n                  </>\n                ) : (\n                  <>\n                    <TableData width={8}>{row.name}</TableData>\n                    <TableData width={8}>{row.college}</TableData>\n                    <TableData width={8}>{row.code}</TableData>\n                    <TableData\n                      width={1}\n                      onClick={() => handleEnableButton(row.id)}>\n                      {row.enable ? \"1\" : \"0\"}\n                    </TableData>\n                  </>\n                )}\n                {add == majorId ? (\n                  <>\n                    <TableButton colSpan={3} onClick={handleDoneSlaveButton}>\n                      완료\n                    </TableButton>\n                  </>\n                ) : (\n                  <>\n                    <TableButton onClick={() => handleAddSlaveButton(majorId)}>\n                      추가\n                    </TableButton>\n                  </>\n                )}\n                {add == majorId ? (\n                  <></>\n                ) : (\n                  <>\n                    {edit == majorId ? (\n                      <>\n                        <TableButton\n                          onClick={() =>\n                            handleSaveMajorButton(majorId, {\n                              majorName: majorNameInput,\n                              college: collegeInput,\n                              code: majorCodeInput,\n                            })\n                          }>\n                          완료\n                        </TableButton>\n                      </>\n                    ) : (\n                      <TableButton\n                        onClick={() => {\n                          handleModifyMajorButton(edit, majorId);\n                          setMajorNameInput(row.name);\n                          setCollegeInput(row.college ? row.college : \"\");\n                          setMajorCodeInput(row.code ? row.code : \"\");\n                        }}>\n                        수정\n                      </TableButton>\n                    )}\n                    {edit == majorId ? (\n                      <>\n                        <TableButton\n                          onClick={() =>\n                            handleModifyMajorButton(edit, majorId)\n                          }>\n                          취소\n                        </TableButton>\n                      </>\n                    ) : (\n                      <>\n                        <TableButton\n                          onClick={() => handleDeleteButton(majorId)}>\n                          삭제\n                        </TableButton>\n                      </>\n                    )}\n                  </>\n                )}\n              </tr>\n\n              {slaveList.length > 0 &&\n                slaveList.map((slave: any, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableData width={2} colSpan={6}>\n                        {slave.name}\n                      </TableData>\n                      <TableButton\n                        onClick={() =>\n                          handleSlaveDeleteButton(majorId, slave.id)\n                        }\n                        colSpan={1}>\n                        삭제\n                      </TableButton>\n                    </tr>\n                  );\n                })}\n            </Fragment>\n          );\n        })}\n        <tr>\n          <td colSpan={3}>\n            <Input\n              width={20}\n              height={2}\n              placeholder=\"추가할 전공을 입력해주세요\"\n              onChange={handleAddMajorInput}\n            />\n          </td>\n          <td onClick={() => handleAddMajorCourseButton(addMajorInput)}>\n            추가\n          </td>\n        </tr>\n      </tbody>\n    </StyledTable>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  td {\n    width: 2rem;\n    padding: 0.3rem;\n    // border-bottom: 1px solid black;\n    border-bottom: 0.1rem solid black;\n    a:link {\n      color: #333;\n    }\n    a:visited {\n      color: #000;\n    }\n    a:hover {\n      color: #808080;\n    }\n    a:active {\n      color: #808080;\n    }\n  }\n\n  tbody {\n    width: 26rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport default function EditableMajorCourseTable(props: any) {\n  const rows = props.rows;\n  const columns = props.columns;\n  const handleDeleteButton = props.handleDeleteButton;\n  const majorId = props.majorId;\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any, index: number) => {\n          const courseId = row.id;\n          return (\n            <tr key={index}>\n              <td>{row.id}</td>\n              <td>{row.name}</td>\n              <td>{row.number}</td>\n              <td>{row.credit}</td>\n              <td onClick={() => handleDeleteButton(majorId, courseId)}>\n                삭제\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport styled from \"styled-components\";\nimport * as config from \"../config\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { Stack } from \"@mui/material\";\n\nimport SearchInput from \"../components/input/SearchInput\";\nimport SearchButton from \"../components/button/SearchButton\";\nimport Table from \"../components/table/Table\";\nimport Divider from \"../components/Divider\";\nimport { useSearchParams } from \"react-router-dom\";\nimport EditableCourseTable from \"../components/table/EditableCourseTable\";\nimport EditableMajorTable from \"../components/table/EditableMajorTable\";\nimport EditableMajorCourseTable from \"../components/table/EditableMajorCourseTable\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\ninterface Props {}\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (event: any, number: number) => void;\n}\n\nconst StyledSelect = styled.select<{ width?: number }>`\n  width: ${({ width }) => (width ? width : 12)}rem;\n  height: 2rem;\n  text-align-last: center;\n  text-align: center;\n  border: 0.1rem black solid;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  font-weight: 700;\n`;\n\ntype CourseType = {\n  name: string;\n  number: string;\n  credit: number;\n};\n\ntype CourseListType = {\n  [key: number]: CourseType;\n};\n\nconst bold = {\n  fontWeight: 700,\n};\n\ntype TipType = {\n  tipTab: boolean;\n};\n\nfunction MajorSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList: any = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange}>\n      {majorList.map((major: any, index: number) => {\n        return (\n          <option value={major.id} key={index}>\n            {major.name}\n          </option>\n        );\n      })}\n    </StyledSelect>\n  );\n}\n\ntype majorType = {\n  id: number;\n  name: string;\n  code: string;\n  college: string;\n};\n\nexport default function AdminPage(props: any) {\n  const [rows, setRows] = useState<Array<CourseListType>>([]);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [hasSearch, setHasSearch] = useState<boolean>(false);\n  const [searchCount, setSearchCount] = useState<number>(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [majorList, setMajorList] = useState<any>([]);\n  const [major, setMajor] = useState<majorType>();\n  const [majorId, setMajorId] = useState<number>(1);\n  const [majorCourseList, setMajorCourseList] = useState<Array<any>>([]);\n  const [changeToggle, setChangeToggle] = useState<boolean>(false);\n  const config = {\n    withCredentials: true,\n  };\n\n  const handleMajorSelection = (event: any) => {\n    setMajorId(event.target.value);\n  };\n\n  const handleChangeSearchInput = (event: any) => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleSearchButton = (event: any) => {\n    const config = {\n      withCredentials: true,\n    };\n    searchInput.toUpperCase();\n\n    const url = BASE_URL + `/admin/courses?keyword=${searchInput}`;\n    axios.get(url, config).then((res) => {\n      const courseList = res.data;\n      setRows([...courseList]);\n      if (courseList.length > 0) {\n        setHasSearch(true);\n      }\n      setSearchCount(courseList.length);\n    });\n  };\n\n  const handleAddMajorCourseButton = (majorId: number, courseId: number) => {\n    const url = `${BASE_URL}/admin/majors/${majorId}/courses/${courseId}`;\n    axios.post(url, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  const handleDeleteMajorCourse = (majorId: number, courseId: number) => {\n    const url = BASE_URL + `/admin/majors/${majorId}/courses/${courseId}`;\n    axios.delete(url, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  const handleAddMajorButton = (majorName: string) => {\n    const url = `${BASE_URL}/admin/majors`;\n    const data = {\n      name: majorName,\n    };\n    axios\n      .post(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e) => {\n        console.log(e);\n        alert(\"전공 추가에 실패하였습니다.\");\n      });\n  };\n\n  const handleSaveMajorButton = (\n    majorId: number,\n    input: { majorName: string; college: string },\n    setEdit: (edit: number) => void\n  ) => {\n    const url = `${BASE_URL}/admin/majors/${majorId}`;\n    const data = {\n      name: input.majorName,\n      college: input.college,\n    };\n    axios\n      .patch(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"수정에 실패하였습니다.\");\n      })\n      .finally(() => {\n        setEdit(-1);\n      });\n  };\n\n  const handleDeleteMajorButton = (majorId: number) => {\n    const url = `${BASE_URL}/admin/majors/${majorId}`;\n    axios\n      .delete(url, config)\n      .then(() => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"삭제에 실패하였습니다.\");\n      });\n  };\n\n  useEffect(() => {\n    /* 전공 리스트 불러오기 */\n    // const majorListUrl = BASE_URL + `/admin/majors`;\n    // axios.get(majorListUrl, config).then((res) => {\n    //   setMajorList([...res.data]);\n    // });\n\n    /* 전공 과목 리스트 불러오기 */\n    const majorCourseListUrl = BASE_URL + `/admin/majors/${majorId}/courses`;\n    axios.get(majorCourseListUrl, config).then((res) => {\n      setMajorCourseList([...res.data]);\n    });\n\n    // const majorUrl = `${BASE_URL}/admin/majors/${majorId}`;\n    // axios.get(majorUrl, config).then((res) => {\n    //   setMajor(res.data);\n    // });\n  }, [majorId, changeToggle]);\n\n  useEffect(() => {\n    /* 초기 렌더링 */\n    const keyword = searchParams.get(\"keyword\");\n    const command = searchParams.get(\"command\");\n\n    /* 전공 리스트 불러오기 */\n    // const majorListUrl = BASE_URL + `/admin/majors`;\n    // axios.get(majorListUrl, config).then((res) => {\n    //   setMajorList([...res.data]);\n    // });\n\n    /* 전공 과목 리스트 불러오기 */\n    const majorCourseListUrl = BASE_URL + `/admin/majors/${majorId}/courses`;\n    axios.get(majorCourseListUrl, config).then((res) => {\n      setMajorCourseList([...res.data]);\n    });\n\n    if (keyword != null) {\n      if (keyword.length < 2) {\n        alert(\"2글자 이상 입력해주세요.\");\n        return;\n      }\n      const url =\n        command == null\n          ? BASE_URL + `/courses?keyword=${keyword}`\n          : BASE_URL + `/courses?keyword=${keyword}&command=${command}`;\n\n      axios.get(url, config).then((res) => {\n        const courseList = res.data.courses;\n        setSearchCount(courseList.length);\n        setHasSearch(true);\n        setRows([...courseList]);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <PageTemplate>\n        <Stack\n          direction=\"column\"\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"center\">\n          <EditableMajorTable\n            rows={majorList}\n            majorId={majorId}\n            rowsHandler={setMajorList}\n          />\n          <MajorSelection\n            majorList={majorList}\n            onChange={handleMajorSelection}\n          />\n          <div>{major && major.name} 전공과목 리스트</div>\n          <EditableMajorCourseTable\n            rows={majorCourseList}\n            columns={[\"ID\", \"과목명\", \"학수번호\", \"학점\"]}\n            majorId={majorId}\n            handleDeleteButton={handleDeleteMajorCourse}\n          />\n          <Stack direction=\"row\" spacing={1}>\n            <SearchInput onChange={handleChangeSearchInput} />\n            <SearchButton onClick={handleSearchButton} />\n          </Stack>\n          <EditableCourseTable\n            majorId={majorId}\n            handleAddButton={handleAddMajorCourseButton}\n            rows={rows}\n            columns={[\"과목명\", \"학수번호\", \"학점\"]}\n          />\n        </Stack>\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MainPage from \"./pages/MainPage\";\n\nimport \"./App.css\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport TakenPage from \"./pages/TakenPage\";\nimport GraduationPage from \"./pages/GraduationPage\";\nimport CoursesPage from \"./pages/CoursesPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"./modules\";\nimport ProtectedRoute from \"./lib/ProtectedRoute\";\nimport { useEffect, useState } from \"react\";\nimport { API_BASE_URL } from \"./config\";\nimport axios from \"axios\";\nimport { loginUser, logoutUser } from \"./modules/auth\";\nimport AdminPage from \"./pages/AdminPage\";\n\nexport interface AppProps {}\n\nexport default function App(props: AppProps) {\n  const isLogin = useSelector((state: RootState) => state.auth.isLogin);\n\n  return (\n    <>\n      <GlobalStyles />\n      <Router>\n        <Routes location={location}>\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route\n            path=\"/users/courses\"\n            element={\n              <ProtectedRoute isLogin={isLogin} outlet={<TakenPage />} />\n            }\n          />\n          <Route\n            path=\"/users/graduation\"\n            element={\n              <ProtectedRoute isLogin={isLogin} outlet={<GraduationPage />} />\n            }\n          />\n          <Route path=\"/courses\" element={<CoursesPage />} />\n          <Route path=\"/admin\" element={<AdminPage />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport menu from \"./menu\";\n\nconst rootReducer = combineReducers({ auth, menu });\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./modules\";\nimport axios from \"axios\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_STATE__,\n  composeWithDevTools()\n);\n\naxios.defaults.withCredentials = true;\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}