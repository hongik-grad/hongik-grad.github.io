{"version":3,"sources":["modules/auth.ts","components/Spinner.tsx","components/Login.tsx","components/Footer.tsx","components/Logo.tsx","components/Header.tsx","components/PageTemplate.tsx","pages/LoginPage.tsx","components/button/Button.tsx","components/button/FeedbackButton.tsx","components/button/TestButton.tsx","pages/MainPage.tsx","components/Result.tsx","pages/ResultPage.tsx","pages/FeedbackPage.tsx","GlobalStyles.tsx","App.tsx","reportWebVitals.ts","modules/index.ts","index.tsx"],"names":["LOGIN_USER","spin","keyframes","StyledSpinner","styled","div","Circle","Spinner","props","LoginBlock","form","InputBlock","span","StyledInput","input","StyledButton","button","Login","useState","id","setId","pw","setPw","loading","setLoading","authAlert","setAuthAlert","dispatch","useDispatch","navigate","useNavigate","onSubmit","e","preventDefault","data","USER_ID","PASSWD","axios","post","BASE_URL","withCredentials","then","res","userData","status","type","payload","catch","tabIndex","placeholder","onChange","target","value","href","Block","GithubLogo","img","StyledLink","a","Footer","src","StyledLogo","Link","Point","Logo","to","StyledHeader","Header","PageStyle","StyledBody","PageTemplate","children","LoginPage","height","width","Button","color","FeedbackButton","TestButton","MainPage","Result","config","courses","setCourses","useEffect","get","console","log","errors","ResultPage","FeedbackPage","GlobalStyles","createGlobalStyle","Container","App","location","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","store","createStore","window","__REDUX_STATE__","composeWithDevTools","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c8293d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nimport * as config from \"../config\";\n\nconst LOGIN_USER = \"USER/login_user\";\nconst LOGOUT_USER = \"USER/logout_user\";\nconst AUTH_USER = \"USER/auth\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\ntype LoginDataProps = {\n  USER_ID: string;\n};\n\nexport function loginUser(userData: LoginDataProps) {\n  return {\n    type: LOGIN_USER,\n    payload: userData,\n  };\n}\n\nexport function logoutUser() {\n  const request = axios.delete(`auth/token`).then((response) => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios.get(`auth/token`).then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\ntype AuthAction =\n  | ReturnType<typeof loginUser>\n  | ReturnType<typeof logoutUser>\n  | ReturnType<typeof auth>;\n\ntype AuthState = {\n  state: boolean;\n};\n\nconst initialState: AuthState = {\n  state: false,\n};\n\nexport default function (state: AuthState = initialState, action: AuthAction) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, isLogin: action.payload };\n    case AUTH_USER:\n      return { ...state, userData: action.payload };\n    case LOGOUT_USER:\n      return { ...state };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\n\nimport styled, { keyframes } from \"styled-components\";\n\nexport interface SpinnerProps {}\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledSpinner = styled.div`\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 5rem;\n  height: 5rem;\n\n  border: 8px solid transparent;\n  border-radius: 50%;\n  border-top-color: #8b00ff;\n  border-bottom-color: #8b00ff;\n\n  transition: 3s;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst Circle = styled.div`\n  width: 3rem;\n  height: 3rem;\n  background-color: #f7f8f9;\n  border-radius: 50%;\n`;\n\nexport default function Spinner(props: SpinnerProps) {\n  return (\n    <StyledSpinner>\n      <Circle />\n    </StyledSpinner>\n  );\n}\n","import { Console } from \"console\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport * as config from \"../config\";\nimport { useNavigate } from \"react-router\";\nimport { loginUser } from \"../modules/auth\";\nimport Spinner from \"./Spinner\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\nexport interface LoginProps {}\n\nconst LoginBlock = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0.1rem;\n`;\n\nconst InputBlock = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 15rem;\n  height: 4rem;\n  margin: 0.1rem;\n  border: 0.1rem black solid;\n  font-size: inherit;\n\n  padding: 1rem;\n\n  ::-webkit-input-placeholder {\n    transition: all 1s, color 0.5s;\n  }\n\n  ::placeholder {\n    opacity: 1;\n  }\n\n  :focus {\n    ::-webkit-input-placeholder {\n      transition: all 1s, color 0.5s;\n      color: transparent;\n    }\n  }\n\n  :hover {\n    ::-webkit-input-placeholder {\n      transition: all 1.5s, color 0.5s;\n      opacity: 0.3;\n    }\n  }\n\n  border-radius: 0.5rem;\n`;\n\nconst StyledButton = styled.button`\n  width: 15rem;\n  height: 4rem;\n  margin: 0.1rem;\n  border: 0.1rem black solid;\n\n  cursor: pointer;\n  color: #333;\n  transition: all 0.9s, color 0.3s;\n  font-size: inherit;\n  :hover {\n    box-shadow: 15rem 0 0 0 rgba(0, 0, 0, 1) inset;\n    color: #ffe;\n  }\n\n  background-color: #c0c0c0;\n\n  font-family: Noto Sans KR;\n  font-weight: 900;\n  border-radius: 0.5rem;\n`;\n\nexport default function Login(props: LoginProps) {\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [authAlert, setAuthAlert] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitHandler = (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    const data = { USER_ID: id, PASSWD: pw };\n    const config = {\n      withCredentials: true,\n    };\n\n    const request = axios\n      .post(BASE_URL + \"/auth/token\", data, config)\n      .then((res) => {\n        setLoading(false);\n        if (res.status == 200) {\n          dispatch(loginUser(res.data.id));\n          navigate(\"/result\");\n        } else {\n          setAuthAlert(true);\n        }\n      })\n      .catch(() => {\n        setAuthAlert(true);\n        setLoading(false);\n      });\n  };\n\n  const onIdHandler = (e: any) => {\n    setId(e.target.value);\n  };\n\n  const onPwHandler = (e: any) => {\n    setPw(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <React.Fragment>\n          <LoginBlock onSubmit={onSubmitHandler}>\n            <InputBlock>\n              <StyledInput\n                tabIndex={1}\n                placeholder=\"학번을 입력하세요.\"\n                onChange={onIdHandler}\n              />\n              <StyledInput\n                tabIndex={2}\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요.\"\n                onChange={onPwHandler}\n              />\n              {loading ? (\n                <Spinner />\n              ) : (\n                <StyledButton type=\"submit\" tabIndex={3}>\n                  로그인\n                </StyledButton>\n              )}\n            </InputBlock>\n          </LoginBlock>\n          {authAlert && (\n            <React.Fragment>\n              <br />\n              <div>\n                <a href=\"https://www.hongik.ac.kr/login.do\"> 여기 </a> 에서\n                로그인을 해주시고 다시 시도해주세요.\n              </div>\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport interface FooterProps {}\n\nconst Block = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst GithubLogo = styled.img`\n  height: 2.5rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  transition: all 0.9s, color 0.3s;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-size: 1.75rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  text-decoration: none;\n  color: black;\n  font-weight: 900;\n  transition: all 1s, color 0.5s;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nexport default function Footer(props: FooterProps) {\n  return (\n    <Block>\n      <StyledLink href=\"https://github.com/hongik-grad\">&lt;/&gt;</StyledLink>\n      <a href=\"https://github.com/ujunhwan\">\n        <GithubLogo src=\"https://cdn-icons-png.flaticon.com/512/25/25231.png\" />\n      </a>\n    </Block>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLogo = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  font-size: 2.7rem;\n  font-family: GothamSSmBookItalic;\n  color: black;\n  flex-direction: column;\n\n  transition: all 1s, color 0.5s;\n  :hover {\n    opacity: 0.3;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  height: 100%;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst Point = styled.span`\n  color: #8b00ff;\n`;\n\nexport interface LogoProps {}\n\nexport default function Logo(props: LogoProps) {\n  return (\n    <StyledLink to=\"/\">\n      <StyledLogo>\n        <div>\n          h<Point>o</Point>ngikgrad\n        </div>\n      </StyledLogo>\n    </StyledLink>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"./Logo\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nexport interface HeaderProps {}\n\nexport default function Header(props: HeaderProps) {\n  return (\n    <StyledHeader>\n      <Logo />\n    </StyledHeader>\n  );\n}\n","import * as React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { mediaQuery } from \"../styles/media\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst PageStyle = styled.div`\n  background-color: #f7f8f9;\n  height: 100%;\n  max-height: 768px;\n\n  justify-content: space-between;\n  align-items: space-between;\n  width: 24rem;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n\n  transition: opacity 0.3s;\n  .entering,\n  .entered {\n    position: relative;\n    opacity: 1;\n  }\n  .exiting,\n  .exited {\n    position: absolute;\n    opacity: 0;\n  }\n`;\n\nconst StyledBody = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport interface PageTemplateProps {\n  children?: React.ReactNode;\n}\n\nexport default function PageTemplate(props: PageTemplateProps) {\n  return (\n    <PageStyle>\n      <Header />\n      <StyledBody>{props.children}</StyledBody>\n      <Footer />\n    </PageStyle>\n  );\n}\n","import * as React from \"react\";\nimport Login from \"../components/Login\";\nimport PageTemplate from \"../components/PageTemplate\";\n\nexport interface LoginPageProps {}\n\nexport default function LoginPage(props: LoginPageProps) {\n  return (\n    <PageTemplate>\n      <Login />\n    </PageTemplate>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nexport interface ButtonProps {\n  children?: React.ReactNode;\n  size?: number;\n  width?: number;\n  height?: number;\n  color?: string;\n}\n\nconst StyledButton = styled.div<{\n  height?: number;\n  width?: number;\n  color?: string;\n}>`\n  height: ${(props) => props.height}rem;\n  width: ${(props) => props.width}rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  margin: 1rem;\n  font-family: Noto Sans KR;\n\n  -webkit-tap-highlight-color: transparent;\n\n  transition: all 1.5s, color 0.5s;\n  :hover {\n    opacity: 0.4;\n  }\n\n  :active {\n    opcaity: 0.3;\n  }\n`;\n\nexport default function Button(props: ButtonProps) {\n  return (\n    <StyledButton height={props.height} width={props.width} color={props.color}>\n      {props?.children}\n    </StyledButton>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\n\nexport interface FeedbackProps {\n  name?: string;\n  children?: React.ReactNode;\n}\n\nconst Block = styled(Link)`\n  font-size: 2.5rem;\n  text-decoration: none;\n  color: #454c53;\n`;\n\nexport default function FeedbackButton(props: FeedbackProps) {\n  return (\n    <Button width={12} height={6} color=\"green\">\n      <Block to=\"login\">피드백하기</Block>\n    </Button>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\n\nexport interface TestButtonProps {\n  name?: string;\n  children?: React.ReactNode;\n}\n\nconst Block = styled(Link)`\n  font-size: 2.5rem;\n  text-decoration: none;\n  color: #454c53;\n`;\n\nexport default function TestButton(props: TestButtonProps) {\n  return (\n    <Button width={12} height={6} color=\"green\">\n      <Block to=\"/login\">검사하기</Block>\n    </Button>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport FeedbackButton from \"../components/button/FeedbackButton\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport TestButton from \"../components/button/TestButton\";\n\nexport interface MainPageProps {}\n\nexport default function MainPage(props: MainPageProps) {\n  return (\n    <PageTemplate>\n      <TestButton />\n      <FeedbackButton />\n    </PageTemplate>\n  );\n}\n","import axios from \"axios\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport * as config from \"../config\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\nexport interface ResultProps {}\n\nexport default function Result(props: ResultProps) {\n  const config = {\n    withCredentials: true,\n  };\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    axios\n      .get(BASE_URL + \"/courses\", config)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        setCourses(res.data);\n      })\n      .catch((errors) => {\n        console.log(errors);\n      });\n  });\n  return (\n    <React.Fragment>\n      RESULT\n      <div>{courses}</div>\n    </React.Fragment>\n  );\n}\n","import * as React from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport Result from \"../components/Result\";\n\nexport interface ResultPageProps {}\n\nexport default function ResultPage(props: ResultPageProps) {\n  return (\n    <PageTemplate>\n      <Result />\n    </PageTemplate>\n  );\n}\n","import * as React from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\n\nexport interface FeedbackPageProps {}\n\nexport default function FeedbackPage(props: FeedbackPageProps) {\n  return <PageTemplate></PageTemplate>;\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: Noto Sans KR, GothamSSmBook, -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Apple SD Gothic Neo\", \"Malgun Gothic\", \"맑은 고딕\", 나눔고딕, \"Nanum Gothic\", \"Noto Sans KR\", \"Noto Sans CJK KR\", arial, 돋움, Dotum, Tahoma, Geneva, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #212529;\n  box-sizing: border-box;\n  background-color:#ffffff;\n}\n* {\n  box-sizing: inherit;\n}\ncode {\n  font-family: 'Fira Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\ninput, button, textarea {\n  font-family: inherit;\n  :focus {\n    outline:none;\n  }\n}\nhtml, body, #root {\n  height: 100%;\n}\n\na {\n  -webkit-tap-highlight-color : transparent;\n  text-decoration:none\n}\n\n@font-face {\n  font-family:GothamXLight;\n  src:url('./styles/Gotham-XLight.woff')\n}\n\n@font-face {\n  font-family: GothamSSmBook;\n  src: url('./styles/GothamSSm-Book.woff');\n}\n\n@font-face {\n  font-family: GothamSSmBookItalic;\n  src: url('./styles/GothamSSm-BookItalic.woff');\n}\n\n@font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 400;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.otf) format('opentype');}\n\n\n\n`;\n\nexport default GlobalStyles;\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MainPage from \"./pages/MainPage\";\nimport styled from \"styled-components\";\nimport ResultPage from \"./pages/ResultPage\";\nimport FeedbackPage from \"./pages/FeedbackPage\";\n\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport \"./App.css\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nexport interface AppProps {}\n\nexport default function App(props: AppProps) {\n  return (\n    <>\n      <GlobalStyles />\n      <Container>\n        <Router>\n          <Routes location={location}>\n            <Route path=\"/\" element={<MainPage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/result\" element={<ResultPage />} />\n            <Route path=\"/feedback\" element={<FeedbackPage />} />\n          </Routes>\n        </Router>\n      </Container>\n    </>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\n\nconst rootReducer = () => {\n  auth;\n};\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./modules\";\nimport axios from \"axios\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_STATE__,\n  composeWithDevTools()\n);\n\naxios.defaults.withCredentials = true;\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}