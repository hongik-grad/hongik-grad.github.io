{"version":3,"sources":["config.ts","modules/auth.ts","components/Spinner.tsx","components/input/Input.tsx","components/button/Button.tsx","components/Login.tsx","components/Footer.tsx","components/button/TextLink.tsx","components/button/LoginButton.tsx","components/button/TextButton.tsx","components/button/LogoutButton.tsx","components/LogoButton.tsx","components/Header.tsx","components/PageTemplate.tsx","pages/LoginPage.tsx","components/button/MenuButton.tsx","pages/MainPage.tsx","GlobalStyles.tsx","components/table/Table.tsx","pages/TakenPage.tsx","components/button/TitleButton.tsx","components/Divider.tsx","pages/GraduationPage.tsx","components/input/SearchInput.tsx","components/button/SearchButton.tsx","pages/CoursesPage.tsx","lib/ProtectedRoute.tsx","components/table/EditableCourseTable.tsx","components/table/EditableMajorTable.tsx","components/table/EditableMajorCourseTable.tsx","pages/AdminPage.tsx","App.tsx","reportWebVitals.ts","modules/menu.ts","modules/index.ts","index.tsx"],"names":["API_BASE_URL","process","LOGIN_USER","LOGOUT_USER","logoutUser","type","initialState","state","isLogin","authCookie","JSESSIONID","SUSER_AUTH","SUSER_AUTHKEY","SUSER_EXTAUTH","SUSER_GUBUN","SUSER_ID","SUSER_LAST","SUSER_LAST_IP","SUSER_LIMIT","SUSER_LOGID","SUSER_LOGKEY","SUSER_NAME","WMONID","hongik_abeek_sso","spin","keyframes","StyledSpinner","styled","div","Circle","Spinner","props","StyledInput","input","width","height","Input","StyledButton","button","color","Button","hover","children","LoginWrapper","form","Notice","style","href","target","rel","Login","useState","id","setId","pw","setPw","loading","setLoading","authAlert","setAuthAlert","dispatch","useDispatch","navigate","useNavigate","onSubmit","e","preventDefault","data","USER_ID","toLowerCase","PASSWD","axios","post","BASE_URL","withCredentials","then","res","authCookieData","status","payload","catch","Stack","direction","spacing","tabIndex","placeholder","onChange","value","Block","GithubLogo","img","StyledLink","a","Footer","src","Link","TextLink","LoginButton","to","TextButton","LogoutButton","onClick","span","LogoButton","HeaderWrapper","Header","useSelector","auth","PageStyle","StyledBody","PageTemplate","setVh","document","documentElement","setProperty","window","innerHeight","addEventListener","React","LoginPage","useEffect","MenuButton","text","MainPage","GlobalStyles","createGlobalStyle","StyledTable","table","Table","rows","columns","map","column","index","row","year","semester","substring","hakgi","url","number","name","credit","TakenPage","Props","totalCount","setTotalCount","totalCredit","setTotalCredit","courses","setCourses","isError","setError","get","TitleButton","Divider","borderTop","config","headers","Accept","bold","fontWeight","satisfied","notSatisfied","GraduationWrapper","StyledSelect","select","NotFound","MajorSelection","majorList","major","enable","AbeekSelection","EnterYearSelection","CourseList","length","SubField","subfield","field","courseList","alignItems","GraduationRequirements","requirements","req","subField","isSatisfied","mainField","className","briefing","GraduationPage","loadingRef","useRef","current","takenCourseTab","setOpenCourseTab","graduationCheckTab","setGraduationCheckTab","majorId","setMajorId","setMajorList","abeek","setAbeek","setRequirements","isDone","setDone","load","setLoad","enterYear","setEnterYear","handleLoadButton","requestUserCourse","alert","handleGraduationCheckButton","isAbeek","response","setTimeout","justifyContent","SearchInput","SearchButton","SearchTypeSelection","CoursesPage","setRows","searchInput","setSearchInput","hasSearch","setHasSearch","searchCount","setSearchCount","useSearchParams","searchParams","searchType","setSearchType","isDirect","setIsDirect","handleSearchButton","search","keyword","count","useLayoutEffect","majorListUrl","init","defaultNotice","searchNotice","onKeyPress","key","ProtectedRoute","outlet","EditableCourseTable","handleAddButton","columnType","courseId","TableData","td","TableButton","EditableMajorTable","rowsHandler","changeToggle","setChangeToggle","addMajorInput","setAddMajorInput","edit","setEdit","majorNameInput","setMajorNameInput","collegeInput","setCollegeInput","add","setAdd","checked","setChecked","majorCodeInput","setMajorCodeInput","handleModifyMajorButton","handleMajorNameInput","handleCollegeInput","handleMajorCodeInput","handleDoneSlaveButton","handleCheckbox","console","log","slaveList","college","code","patch","enableToggle","handleEnableButton","colSpan","handleAddSlaveButton","majorName","finally","handleSaveMajorButton","delete","handleDeleteButton","slave","slaveId","handleSlaveDeleteButton","handleAddMajorCourseButton","EditableMajorCourseTable","majorCourseList","setMajorCourseList","reload","setReload","handleRequiredButton","majorCourseListUrl","required","AdminPage","command","event","toUpperCase","App","location","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TOGGLE_MENU","CLOSE_MENU","open","menu","action","rootReducer","combineReducers","store","createStore","__REDUX_STATE__","composeWithDevTools","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b2d7499.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API;\nexport const HOME_URL = process.env.REACT_APP_HOME;\n","import axios from \"axios\";\nimport qs from \"qs\";\nimport * as config from \"../config\";\n\nconst LOGIN_USER = \"USER/login_user\";\nconst LOGOUT_USER = \"USER/logout_user\";\nconst AUTH_USER = \"USER/auth\";\n\ntype AuthCookieProps = {\n  JSESSIONID: string;\n  SUSER_AUTH: string;\n  SUSER_AUTHKEY: string;\n  SUSER_EXTAUTH: string;\n  SUSER_GUBUN: string;\n  SUSER_ID: string;\n  SUSER_LAST: string;\n  SUSER_LAST_IP: string;\n  SUSER_LIMIT: string;\n  SUSER_LOGID: string;\n  SUSER_LOGKEY: string;\n  SUSER_NAME: string;\n  WMONID: string;\n  hongik_abeek_sso: string;\n};\n\nexport function loginUser(authCookieData: AuthCookieProps) {\n  return {\n    type: LOGIN_USER,\n    payload: authCookieData,\n  };\n}\n\nexport function logoutUser() {\n  return {\n    type: LOGOUT_USER,\n  };\n}\n\nexport function auth() {\n  const request = axios.get(`auth/token`).then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\ntype AuthAction =\n  | ReturnType<typeof loginUser>\n  | ReturnType<typeof logoutUser>\n  | ReturnType<typeof auth>;\n\ntype AuthState = {\n  state: boolean;\n  isLogin: boolean;\n  authCookie: AuthCookieProps;\n};\n\nconst initialState: AuthState = {\n  state: false,\n  isLogin: false,\n  authCookie: {\n    JSESSIONID: \"\",\n    SUSER_AUTH: \"\",\n    SUSER_AUTHKEY: \"\",\n    SUSER_EXTAUTH: \"\",\n    SUSER_GUBUN: \"\",\n    SUSER_ID: \"\",\n    SUSER_LAST: \"\",\n    SUSER_LAST_IP: \"\",\n    SUSER_LIMIT: \"\",\n    SUSER_LOGID: \"\",\n    SUSER_LOGKEY: \"\",\n    SUSER_NAME: \"\",\n    WMONID: \"\",\n    hongik_abeek_sso: \"\",\n  },\n};\n\nexport default function (state: AuthState = initialState, action: any) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, isLogin: true, authCookie: action.payload };\n    case LOGOUT_USER:\n      return { ...state, isLogin: false, authCookie: initialState.authCookie };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\n\nimport styled, { keyframes } from \"styled-components\";\n\nexport interface SpinnerProps {}\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledSpinner = styled.div`\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 5rem;\n  height: 5rem;\n\n  border: 8px solid transparent;\n  border-radius: 50%;\n  border-top-color: #d3d3d3;\n  border-bottom-color: #d3d3d3;\n\n  transition: 3s;\n  animation: ${spin} 1s linear infinite;\n`;\n\nconst Circle = styled.div`\n  width: 3rem;\n  height: 3rem;\n  background-color: #fff;\n  border-radius: 50%;\n`;\n\nexport default function Spinner(props: SpinnerProps) {\n  return (\n    <StyledSpinner>\n      <Circle />\n    </StyledSpinner>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nexport interface InputProps {\n  children?: React.ReactNode;\n  width?: number;\n  height?: number;\n}\n\nconst StyledInput = styled.input<{\n  width?: number;\n  height?: number;\n}>`\n  width: ${({ width }) => (width ? width : 15)}rem;\n  height: ${({ height }) => (height ? height : 4)}rem;\n  border: 0.1rem black solid;\n  font-size: inherit;\n  font-family: \"Noto Sans KR\", sans-serif;\n\n  padding: 1rem;\n\n  ::-webkit-input-placeholder {\n    transition: all 1s, color 0.5s;\n  }\n\n  ::placeholder {\n    opacity: 1;\n  }\n\n  :focus {\n    ::-webkit-input-placeholder {\n      transition: all 1s, color 0.5s;\n      color: transparent;\n    }\n  }\n\n  :hover {\n    ::-webkit-input-placeholder {\n      transition: all 1.5s, color 0.5s;\n      opacity: 0.3;\n    }\n  }\n\n  border-radius: 0.5rem;\n`;\n\nexport default function Input(props: any) {\n  return <StyledInput {...props} />;\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{\n  width?: number;\n  height?: number;\n  color?: string;\n  hover?: boolean;\n}>`\n  width: ${({ width }) => (width ? width : 15)}rem;\n  height: ${({ height }) => (height ? height : 4)}rem;\n  // margin: 0.1rem;\n  border: 0.1rem black solid;\n\n  cursor: pointer;\n  color: #333;\n  transition: all 0.9s, color 0.3s;\n  font-size: inherit;\n\n  :hover {\n    opacity: 0.7;\n  }\n  :active {\n    transition: all 0.1s;\n    background-color: #808080;\n  }\n\n  background-color: ${({ color }) => (color ? color : \"#c0c0c0\")};\n\n  font-weight: 700;\n  border-radius: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default function Button(props: any) {\n  return (\n    <StyledButton\n      width={props.width}\n      height={props.height}\n      color={props.color}\n      hover={props.hover}\n      {...props}>\n      {props?.children}\n    </StyledButton>\n  );\n}\n","import { Console } from \"console\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport * as config from \"../config\";\nimport { useNavigate } from \"react-router\";\nimport { loginUser } from \"../modules/auth\";\nimport Spinner from \"./Spinner\";\nimport Input from \"./input/Input\";\nimport Button from \"./button/Button\";\nimport { Stack } from \"@mui/material\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\nexport interface LoginProps {}\n\nconst LoginWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0.1rem;\n`;\n\nfunction Notice(props: any) {\n  return (\n    <>\n      <div style={{ width: \"26rem\" }}>\n        <div>본 사이트는 아이디, 비밀번호를 수집하지 않습니다!</div>\n        <div>\n          Jsoup을 통해 얻어진 쿠키를 이용해 로그인 처리를 하며, 모든 코드는{\" \"}\n          <a\n            href=\"https://github.com/hongikgrad\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            GitHub\n          </a>\n          에 올라가 있습니다.\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default function Login(props: LoginProps) {\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [authAlert, setAuthAlert] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitHandler = (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    const data = { USER_ID: id.toLowerCase(), PASSWD: pw };\n    const config = {\n      withCredentials: true,\n    };\n\n    axios\n      .post(BASE_URL + \"/auth/token\", data, config)\n      .then((res) => {\n        setLoading(false);\n        if (res.status == 200) {\n          dispatch(loginUser(res.data));\n          navigate(-1);\n        } else {\n          setAuthAlert(true);\n        }\n      })\n      .catch(() => {\n        setAuthAlert(true);\n        setLoading(false);\n      });\n  };\n\n  const onIdHandler = (e: any) => {\n    setId(e.target.value);\n  };\n\n  const onPwHandler = (e: any) => {\n    setPw(e.target.value);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Notice />\n          <LoginWrapper onSubmit={onSubmitHandler}>\n            <Stack direction=\"column\" spacing=\"0.5rem\">\n              <Input\n                tabIndex={1}\n                width={26}\n                placeholder=\"학번을 입력하세요.\"\n                onChange={onIdHandler}\n              />\n              <Input\n                tabIndex={2}\n                width={26}\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요.\"\n                onChange={onPwHandler}\n              />\n              <Button type=\"submit\" tabIndex={3} width={26}>\n                로그인\n              </Button>\n            </Stack>\n          </LoginWrapper>\n          {authAlert && (\n            <React.Fragment>\n              <br />\n              <div>계속해서 로그인에 실패하신다면</div>\n              <div>\n                <a href=\"https://www.hongik.ac.kr/login.do\"> 여기 </a> 에서\n                로그인을 해주시고 다시 시도해주세요.\n              </div>\n            </React.Fragment>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport interface FooterProps {}\n\nconst Block = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst GithubLogo = styled.img`\n  height: 2.5rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  transition: all 0.9s, color 0.3s;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-size: 1.75rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  text-decoration: none;\n  color: black;\n  font-weight: 900;\n  transition: all 1s, color 0.5s;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nexport default function Footer(props: FooterProps) {\n  return (\n    <Block>\n      <StyledLink\n        href=\"https://github.com/hongikgrad\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        &lt;/&gt;\n      </StyledLink>\n      <a\n        href=\"https://github.com/ujunhwan\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <GithubLogo src=\"https://cdn-icons-png.flaticon.com/512/25/25231.png\" />\n      </a>\n    </Block>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButton = styled.button<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n`;\n\nexport default function TextLink(props: any) {\n  return <StyledLink {...props}>{props.children}</StyledLink>;\n}\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport TextLink from \"./TextLink\";\n\nexport interface LoginButtonProps {}\n\nexport default function LoginButton(props: LoginButtonProps) {\n  return (\n    <TextLink width={1} to=\"/login\">\n      login\n    </TextLink>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n`;\n\nexport default function TextButton(props: any) {\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n}\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router\";\nimport { logoutUser } from \"../../modules/auth\";\nimport Button from \"./Button\";\nimport TextButton from \"./TextButton\";\n\nexport default function LogoutButton(props: any) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handlerLogout = () => {\n    dispatch(logoutUser());\n    navigate(\"/\");\n    // window.sessionStorage.setItem(\"login\", \"false\");\n  };\n  return (\n    <TextButton onClick={handlerLogout} width={1} height={1}>\n      logout\n    </TextButton>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport TextLink from \"./button/TextLink\";\n\nconst StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 34px;\n  :hover {\n    opacity: 0.5;\n  }\n  // @media (max-width: 768px) {\n  //   color: black;\n  //   font-size: 20px;\n  // }\n`;\n\nconst Point = styled.span`\n  color: #8b00ff;\n`;\n\nexport interface LogoProps {}\n\nexport default function LogoButton(props: LogoProps) {\n  return (\n    <TextLink to=\"/\" width={2}>\n      hongikgrad\n    </TextLink>\n  );\n}\n","import { Stack } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../modules\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport LoginButton from \"./button/LoginButton\";\nimport LogoutButton from \"./button/LogoutButton\";\nimport LogoButton from \"./LogoButton\";\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 26rem;\n`;\n\nexport interface HeaderProps {}\n\nexport default function Header(props: HeaderProps) {\n  const isLogin = useSelector((state: RootState) => state.auth.isLogin);\n  return (\n    <HeaderWrapper>\n      <LogoButton />\n      {/* <BurgerMenu /> */}\n      {isLogin ? <LogoutButton /> : <LoginButton />}\n    </HeaderWrapper>\n  );\n}\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../modules\";\nimport { setMenuClose, ToggleMenu } from \"../modules/menu\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n\nconst PageStyle = styled.div`\n  min-height: calc(var(--vh) * 100);\n  background-color: white;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  transition: opacity 0.3s;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledBody = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-family: \"Noto Sans KR\", sans-serif;\n`;\n\nexport interface PageTemplateProps {\n  children?: React.ReactNode;\n}\n\nexport default function PageTemplate(props: PageTemplateProps) {\n  const dispatch = useDispatch();\n  const setVh = () => {\n    document.documentElement.style.setProperty(\n      \"--vh\",\n      `${window.innerHeight * 0.01}px`\n    );\n  };\n  window.addEventListener(\"resize\", setVh);\n\n  React.useEffect(() => {\n    setVh();\n    // dispatch(setMenuClose());\n  }, []);\n  return (\n    <PageStyle id=\"layout\">\n      {/* <Menu /> */}\n      <Header />\n      <StyledBody id=\"content\">{props.children}</StyledBody>\n      <Footer />\n    </PageStyle>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Login from \"../components/Login\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { logoutUser } from \"../modules/auth\";\n\nexport interface LoginPageProps {}\n\nexport default function LoginPage(props: LoginPageProps) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(logoutUser());\n  }, []);\n  return (\n    <PageTemplate>\n      <Login />\n    </PageTemplate>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nexport default function MenuButton(props: any) {\n  return (\n    <Link to={props.href}>\n      <Button width={26} height={5} color=\"#e5e5e5\">\n        {props.text}\n      </Button>\n    </Link>\n  );\n}\n","import * as React from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { Stack } from \"@mui/material\";\nimport MenuButton from \"../components/button/MenuButton\";\n\nexport interface MainPageProps {}\n\nexport default function MainPage(props: MainPageProps) {\n  return (\n    <PageTemplate>\n      <Stack spacing={\"0.5rem\"}>\n        <MenuButton text=\"졸업요건 검사하기\" href=\"/users/graduation\" />\n        <MenuButton text=\"등록된 과목 보기\" href=\"/courses\" />\n      </Stack>\n    </PageTemplate>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\nhtml {\n  font-size: 30px;\n  width: 100%;\n}\n\n@media screen and (max-width: 2559px) {\n    html {\n        font-size: 20px;\n    }\n}\n\n@media screen and (max-width: 1023px) {\n    html {\n        font-size: 16px;\n    }\n}\n\n@media screen and (max-width: 767px) {\n    html {\n        font-size: 12px;\n    }\n}\n\nbody {\n  margin: 0px;\n  padding: 0px;\n  font-family: Montserrat, Noto Sans KR, GothamSSmBook, -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Apple SD Gothic Neo\", \"Malgun Gothic\", \"맑은 고딕\", 나눔고딕, \"Nanum Gothic\", \"Noto Sans KR\", \"Noto Sans CJK KR\", arial, 돋움, Dotum, Tahoma, Geneva, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #212529;\n  box-sizing: border-box;\n  background-color:#ffffff;\n  height:inherit;\n  white-space : pre-line;\n}\n* {\n  box-sizing: inherit;\n}\ncode {\n  font-family: 'Fira Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\ninput, button, textarea {\n  font-family: inherit;\n  :focus {\n    outline:none;\n  }\n}\nhtml, body, #root {\n}\n\na {\n  -webkit-tap-highlight-color : transparent;\n  text-decoration:none\n}\n\na:link {\n  color: #333;\n}\n\na:visited {\n  color: #000;\n}\n\na:hover {\n  color: #808080;\n}\n\na:active {\n  color: #808080;\n}\n`;\n\nexport default GlobalStyles;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  td {\n    width: 2rem;\n    padding: 0.3rem;\n    // border-bottom: 1px solid black;\n    border-bottom: 0.1rem solid black;\n    a:link {\n      color: #333;\n    }\n    a:visited {\n      color: #000;\n    }\n    a:hover {\n      color: #808080;\n    }\n    a:active {\n      color: #808080;\n    }\n  }\n\n  tbody {\n    width: 25rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport default function Table(props: any) {\n  const rows = props.rows;\n  const columns = props.columns;\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any) => {\n          const year =\n            typeof row.semester === \"string\"\n              ? row.semester.substring(0, 4)\n              : \"\";\n          const hakgi =\n            typeof row.semester === \"string\" ? row.semester.substring(4) : \"\";\n          const url =\n            typeof row.semester === \"string\"\n              ? `https://sugang.hongik.ac.kr/cn13061.jsp?yy=${year}&hakgi=${hakgi}&haksu=${row.number}&bunban=1`\n              : \"/\";\n          return (\n            <tr key={row.number + row.credit}>\n              <td>\n                <a\n                  key={row}\n                  href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  {row.name}\n                </a>\n              </td>\n\n              <td>{row.number}</td>\n              <td>{row.credit}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../components/button/Button\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport Table from \"../components/table/Table\";\nimport { API_BASE_URL } from \"../config\";\nimport { RootState } from \"../modules\";\n\ninterface Props {}\n\nexport default function TakenPage(Props: Props) {\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [totalCredit, setTotalCredit] = useState<number>(0);\n  const [courses, setCourses] = useState<any>([]);\n  const [isError, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const url = API_BASE_URL + \"/users/courses\";\n    const config = {\n      withCredentials: true,\n    };\n    axios\n      .get(url, config)\n      .then((res) => {\n        setTotalCount(res.data.totalCount);\n        setTotalCredit(res.data.totalCredit);\n        setCourses([...res.data.courses]);\n      })\n      .catch((e) => {\n        setError(true);\n      });\n  }, []);\n\n  return (\n    <>\n      <PageTemplate>\n        {isError && <div>error T.T</div>}\n        {totalCount == 0 ? (\n          <></>\n        ) : (\n          <>\n            <div>{totalCount}개의 강의를 수강하셨습니다.</div>\n            <div>{totalCredit}학점을 들으셨습니다.</div>\n            <Table rows={courses} columns={[\"강의명\", \"학수번호\", \"학점\"]} />\n          </>\n        )}\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button<{ width: number }>`\n  color: black;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: ${({ width }) => width}rem;\n  :hover {\n    opacity: 0.5;\n  }\n  background-color: transparent;\n  border: none;\n`;\n\nexport default function TitleButton(props: any) {\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n}\n","import * as React from \"react\";\n\nexport interface DividerProps {}\n\nexport default function Divider(props: DividerProps) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        borderTop: \"0.5px solid #808080 \",\n      }}></div>\n  );\n}\n","import { Stack } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router\";\nimport Button from \"../components/button/Button\";\nimport TextButton from \"../components/button/TextButton\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport Spinner from \"../components/Spinner\";\nimport Table from \"../components/table/Table\";\nimport { API_BASE_URL } from \"../config\";\nimport TitleButton from \"../components/button/TitleButton\";\nimport Divider from \"../components/Divider\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../modules\";\n\ninterface Props {}\n\nconst config = {\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n  },\n};\n\nconst bold = {\n  fontWeight: 700,\n};\n\nconst satisfied = {\n  color: \"black\",\n};\n\nconst notSatisfied = {\n  color: \"red\",\n};\n\nconst GraduationWrapper = styled.div`\n  width: 26rem;\n`;\n\nconst StyledSelect = styled.select<{ width?: number }>`\n  width: ${({ width }) => (width ? width : 12)}rem;\n  height: 2rem;\n  text-align-last: center;\n  text-align: center;\n  border: 0.1rem black solid;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  font-weight: 700;\n`;\n\nfunction NotFound(props: any) {\n  return <div style={{ width: \"100%\" }}>수강한 과목이 없습니다.</div>;\n}\n\nfunction MajorSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange} width={12}>\n      <option value={-1}>전공을 선택해주세요.</option>\n      {majorList.map((major: any, index: number) => {\n        return (\n          major.enable == 1 && (\n            <option key={index} value={major.id}>\n              {major.name}\n            </option>\n          )\n        );\n      })}\n    </StyledSelect>\n  );\n}\n\nfunction AbeekSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  return (\n    <StyledSelect name=\"abeek\" onChange={onChange} width={5}>\n      <option value=\"false\">비공학</option>\n      <option value=\"true\">공학</option>\n    </StyledSelect>\n  );\n}\n\nfunction EnterYearSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  return (\n    <StyledSelect onChange={onChange} width={4}>\n      <option value=\"16\">16</option>\n      <option value=\"17\">17</option>\n      <option value=\"18\">18</option>\n      <option value=\"19\">19</option>\n      <option value=\"20\">20</option>\n      <option value=\"21\">21</option>\n      <option value=\"22\">22</option>\n    </StyledSelect>\n  );\n}\n\nfunction CourseList(props: any) {\n  const courses = props.courses;\n  return (\n    <>\n      {courses && courses.length > 0 ? (\n        <Table rows={courses} columns={[\"강의명\", \"학수번호\", \"학점\"]} />\n      ) : (\n        <NotFound />\n      )}\n    </>\n  );\n}\n\nfunction SubField(props: any) {\n  const subfield = props.subfield;\n  return (\n    <>\n      {subfield &&\n        subfield.map((field: any, index: number) => {\n          const courses: any = field.courseList;\n          const url: string = field.url;\n          return (\n            <Stack\n              key={index}\n              alignItems=\"flex-start\"\n              spacing=\"1rem\"\n              width=\"100%\">\n              <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n                <h3>{field.field}</h3>\n              </a>\n              <div>{field.totalCredit}학점 수강</div>\n              <CourseList courses={courses} />\n              <br />\n              <br />\n            </Stack>\n          );\n        })}\n    </>\n  );\n}\n\nfunction GraduationRequirements(props: any) {\n  const requirements = props.requirements;\n\n  return (\n    <>\n      {requirements.map((req: any, index: number) => {\n        const subfield: any = req.subField;\n        return (\n          <Stack alignItems=\"center\" key={index} width=\"100%\">\n            <div style={req.isSatisfied ? satisfied : notSatisfied}>\n              <h2>{req.mainField}</h2>\n              <div>\n                <span style={bold}>{req.totalCredit}</span>학점 수강\n              </div>\n              <br />\n            </div>\n            <div\n              className=\"briefing\"\n              style={req.isSatisfied ? satisfied : notSatisfied}>\n              <div>{req.briefing}</div>\n            </div>\n            <div className=\"subfields\" style={{ width: \"100%\" }}>\n              <SubField subfield={subfield} />\n            </div>\n            <br />\n            <Divider />\n          </Stack>\n        );\n      })}\n    </>\n  );\n}\n\nexport default function GraduationPage(Props: Props) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState<boolean>(true);\n  const loadingRef = useRef(loading);\n  loadingRef.current = loading;\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [totalCredit, setTotalCredit] = useState<number>(0);\n  const [courses, setCourses] = useState<any>([]);\n  const [takenCourseTab, setOpenCourseTab] = useState<boolean>(true);\n  const [graduationCheckTab, setGraduationCheckTab] = useState<boolean>(false);\n\n  const [majorId, setMajorId] = useState<number>(-1);\n  const [majorList, setMajorList] = useState<Array<any>>([]);\n  const [abeek, setAbeek] = useState<string>(\"false\");\n  const [requirements, setRequirements] = useState<any>([]);\n  const [isDone, setDone] = useState<boolean>(false);\n  const [load, setLoad] = useState<number>(0);\n  const [enterYear, setEnterYear] = useState<number>(16);\n  const authCookieData = useSelector(\n    (state: RootState) => state.auth.authCookie\n  );\n\n  const handleTakenCourseTab = () => {\n    setOpenCourseTab(!takenCourseTab);\n  };\n\n  const handleGraduationCheckTab = () => {\n    setGraduationCheckTab(!graduationCheckTab);\n  };\n\n  const handleMajorSelect = (e: any) => {\n    setMajorId(e.target.value);\n  };\n\n  const handleAbeekSelect = (e: any) => {\n    setAbeek(e.target.value);\n  };\n\n  const handleEnterYearSelect = (e: any) => {\n    setEnterYear(e.target.value);\n  };\n\n  const handleLoadButton = async () => {\n    await requestUserCourse();\n    alert(\"과복 불러오기 성공!\");\n  };\n\n  const handleGraduationCheckButton = async () => {\n    const url = `${API_BASE_URL}/users/graduation`;\n    const data = {\n      majorId: majorId,\n      isAbeek: abeek,\n      courseList: courses,\n      enterYear: enterYear,\n    };\n    if (majorId != -1) {\n      const response = await axios.post(url, data, config);\n      setRequirements([...response.data]);\n      setGraduationCheckTab(true);\n      setDone(true);\n    } else {\n      alert(\"전공을 선택해주세요.\");\n    }\n  };\n\n  const requestUserCourse = async () => {\n    const url = API_BASE_URL + `/users/courses`;\n    try {\n      const res = await axios.post(url, authCookieData, config);\n      setCourses([...res.data.courses]);\n      setTotalCount(res.data.totalCount);\n      setTotalCredit(res.data.totalCredit);\n      setLoad(load + 1);\n      setLoading(false);\n    } catch (e: any) {\n      const res = await axios.post(url, authCookieData, config);\n      setCourses([...res.data.courses]);\n      setTotalCount(res.data.totalCount);\n      setTotalCredit(res.data.totalCredit);\n      setLoad(load + 1);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (loadingRef.current) {\n        alert(\"서버와의 통신이 원할하지 않습니다.\");\n        navigate(-1);\n      }\n    }, 3000);\n\n    const url = `${API_BASE_URL}/majors`;\n    axios.get(url, config).then((res) => {\n      setMajorList([...res.data]);\n    });\n    requestUserCourse();\n  }, []);\n\n  return (\n    <>\n      <PageTemplate>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <Stack spacing=\"1rem\" justifyContent=\"center\" alignItems=\"center\">\n              <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                spacing=\"0.1rem\"\n                width=\"100%\">\n                <EnterYearSelection onChange={handleEnterYearSelect} />\n                <MajorSelection\n                  onChange={handleMajorSelect}\n                  majorList={majorList}\n                />\n                <AbeekSelection onChange={handleAbeekSelect} />\n                <Button\n                  onClick={handleGraduationCheckButton}\n                  color=\"#fff\"\n                  width={6}\n                  height={2}>\n                  검사하기\n                </Button>\n              </Stack>\n              <GraduationWrapper>\n                <TitleButton onClick={handleGraduationCheckTab}>\n                  <h1>졸업 요건</h1>\n                </TitleButton>\n                {load == 0 && (\n                  <div>\n                    <span style={bold}>수강 과목 불러오기</span> 버튼을\n                    눌러주세요!\n                  </div>\n                )}\n                {!isDone && (\n                  <>\n                    <div>\n                      학과와 (공학/비공학) 여부를 선택하신 후 <br />\n                      <span style={bold}>검사하기</span> 버튼을 눌러주세요!\n                    </div>\n                    <br />\n                  </>\n                )}\n                {graduationCheckTab && (\n                  <>\n                    <GraduationRequirements requirements={requirements} />\n                  </>\n                )}\n              </GraduationWrapper>\n              <TitleButton onClick={handleTakenCourseTab}>\n                <h1>수강 과목</h1>\n              </TitleButton>\n              {takenCourseTab && (\n                <>\n                  <div>\n                    <span style={bold}>{totalCount}</span>\n                    개의 강의를 수강하셨고{\" \"}\n                    <span style={bold}>{totalCredit}</span>\n                    학점을 들으셨습니다.\n                  </div>\n                  <Table\n                    rows={courses}\n                    columns={[\"강의명\", \"학수번호\", \"학점\"]}\n                  />\n                  {load == 0 && (\n                    <Button\n                      width={26}\n                      color=\"#e5e5e5\"\n                      onClick={handleLoadButton}>\n                      수강 과목 불러오기\n                    </Button>\n                  )}\n                </>\n              )}\n            </Stack>\n          </>\n        )}\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\n\nexport default function SearchInput(props: any) {\n  return <Input width={18} placeholder=\"과목을 검색하세요.\" {...props} />;\n}\n","import * as React from \"react\";\nimport Button from \"./Button\";\n\nexport default function SearchButton(props: any) {\n  return (\n    <Button width={6} height={4} color=\"#e5e5e5\" {...props}>\n      검색\n    </Button>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { Stack } from \"@mui/material\";\n\nimport styled from \"styled-components\";\n\nimport SearchInput from \"../components/input/SearchInput\";\nimport SearchButton from \"../components/button/SearchButton\";\nimport Table from \"../components/table/Table\";\nimport Divider from \"../components/Divider\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { API_BASE_URL } from \"../config\";\n\nconst StyledSelect = styled.select<{ width?: number; height?: number }>`\n  width: ${({ width }) => (width ? width : 12)}rem;\n  // height: 2rem;\n  height: ${({ height }) => (height ? height : 2)}rem;\n  text-align-last: center;\n  text-align: center;\n  border: 0.1rem black solid;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  font-weight: 700;\n`;\n\nconst config = { withCredentials: true };\n\ntype CourseType = {\n  name: string;\n  number: string;\n  credit: number;\n};\n\ntype CourseListType = {\n  [key: number]: CourseType;\n};\n\nconst bold = {\n  fontWeight: 700,\n};\n\nconst courseNameRegex = /^[가-힣a-zA-Z():]{2,}$/;\nconst courseNumberRegex = /^[0-9]{3,6}$/;\n\nfunction SearchTypeSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange} width={6} height={4}>\n      <option value=\"name\">과목명</option>\n      <option value=\"number\">학수번호</option>\n      <option value=\"major\">전공</option>\n    </StyledSelect>\n  );\n}\n\nfunction MajorSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList: any = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange} width={18} height={4}>\n      {majorList.map((major: any, index: number) => {\n        return (\n          <option value={major.id} key={index}>\n            {major.name}\n          </option>\n        );\n      })}\n    </StyledSelect>\n  );\n}\n\nexport default function CoursesPage(props: any) {\n  const [rows, setRows] = useState<Array<any>>([]);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [hasSearch, setHasSearch] = useState<boolean>(false);\n  const [searchCount, setSearchCount] = useState<number>(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchType, setSearchType] = useState<string>(\"name\");\n\n  const [majorList, setMajorList] = useState<Array<any>>([]);\n\n  const [majorSelect, setMajorSelect] = useState<number>(1);\n\n  const [isDirect, setIsDirect] = useState<boolean>(false);\n\n  const handleChangeSearchInput = (e: any) => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleSearchButton = () => {\n    search(searchType, searchInput);\n  };\n\n  const handleSearchTypeSelect = (e: any) => {\n    setSearchType(e.target.value);\n    setSearchInput(\"\");\n  };\n\n  function handleMajorSelect(e: any) {\n    setSearchInput(e.target.value);\n  }\n\n  const handleOnKeyPress = (e: any) => {\n    if (e.key == \"Enter\") {\n      handleSearchButton();\n    }\n  };\n\n  const search = (type: string, keyword: string, year?: string) => {\n    const input = keyword ? keyword : searchInput;\n    if (type != \"major\" && type != \"required\" && input.length < 2) {\n      alert(\"2글자 이상 입력해주세요.\");\n      return;\n    }\n    const url = `${API_BASE_URL}/courses?type=${type}&keyword=${input}&year=${year}`;\n    axios.get(url, config).then((res) => {\n      const result = res.data;\n      const count = result.length;\n      setSearchCount(count);\n      setRows([...res.data]);\n      setHasSearch(true);\n    });\n  };\n\n  useLayoutEffect(() => {\n    const url = `${API_BASE_URL}/courses/count`;\n    axios.get(url).then((res) => {\n      setTotalCount(res.data);\n    });\n\n    const majorListUrl = `${API_BASE_URL}/majors`;\n    axios.get(majorListUrl, config).then((res) => {\n      setMajorList([...res.data]);\n    });\n  }, []);\n\n  const init = () => {\n    // 직접 접근\n    const keyword = searchParams.get(\"keyword\");\n    const type = searchParams.get(\"type\");\n    const year = searchParams.get(\"year\");\n\n    setSearchInput(keyword ? keyword : \"\");\n    if (keyword != null) {\n      setIsDirect(true);\n      search(type ? type : \"\", keyword ? keyword : \"\", year ? year : \"\");\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const defaultNotice = `현재 ${totalCount}개의 수업이 등록되어 있습니다.`;\n  const searchNotice = `${searchCount}개의 수업이 검색 되었습니다.`;\n  return (\n    <>\n      <PageTemplate>\n        <Stack\n          direction=\"column\"\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"center\">\n          <div>{hasSearch ? searchNotice : defaultNotice}</div>\n          <Stack direction=\"row\" spacing={1}>\n            {!isDirect && (\n              <>\n                <SearchTypeSelection onChange={handleSearchTypeSelect} />\n                {searchType != \"major\" ? (\n                  <SearchInput\n                    onChange={handleChangeSearchInput}\n                    value={searchInput}\n                    onKeyPress={handleOnKeyPress}\n                  />\n                ) : (\n                  <MajorSelection\n                    onChange={handleMajorSelect}\n                    majorList={majorList}\n                  />\n                )}\n                <SearchButton onClick={handleSearchButton} />\n              </>\n            )}\n          </Stack>\n          {searchCount > 0 && (\n            <Table rows={rows} columns={[\"과목명\", \"학수번호\", \"학점\"]} />\n          )}\n        </Stack>\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Navigate, Route } from \"react-router\";\n\nexport interface ProtectedRouteProps {}\n\nexport default function ProtectedRoute(props: any) {\n  return props.isLogin ? props.outlet : <Navigate to=\"/login\" />;\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  td {\n    width: 2rem;\n    padding: 0.3rem;\n    // border-bottom: 1px solid black;\n    border-bottom: 0.1rem solid black;\n    a:link {\n      color: #333;\n    }\n    a:visited {\n      color: #000;\n    }\n    a:hover {\n      color: #808080;\n    }\n    a:active {\n      color: #808080;\n    }\n  }\n\n  tbody {\n    width: 25rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport default function EditableCourseTable(props: any) {\n  const rows = props.rows;\n  const columns = props.columns;\n  const columnType = props.columnType;\n  const handleAddButton = props.handleAddButton;\n  const majorId = props.majorId;\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any, index: number) => {\n          const courseId = row.id;\n          return (\n            <tr key={index}>\n              <td>{row.name}</td>\n              <td>{row.number}</td>\n              <td>{row.credit}</td>\n              <td onClick={() => handleAddButton(majorId, courseId)}>추가</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport * as React from \"react\";\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { API_BASE_URL } from \"../../config\";\nimport Input from \"../input/Input\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  tbody {\n    width: 25rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst TableData = styled.td<{ width: number }>`\n  width: ${({ width }) => width}rem;\n  // border-bottom: 1px solid black;\n  border-bottom: 0.1rem solid black;\n  a:link {\n    color: #333;\n  }\n  a:visited {\n    color: #000;\n  }\n  a:hover {\n    color: #808080;\n  }\n  a:active {\n    color: #808080;\n  }\n`;\n\nconst TableButton = styled.td`\n  width: 0.5rem;\n  border-bottom: 0.1rem solid black;\n`;\n\nconst config = {\n  withCredentials: true,\n};\n\nexport default function EditableMajorTable(props: any) {\n  const majorId = props.majorId;\n  const rows = props.rows;\n  const rowsHandler = props.rowsHandler;\n  // const columns = props.columns;\n\n  const columns = [\"ID\", \"전공명\", \"단과대학\"];\n  const [changeToggle, setChangeToggle] = useState<boolean>(false);\n\n  const [addMajorInput, setAddMajorInput] = useState<string>(\"\");\n  const [edit, setEdit] = useState<number>(-1);\n\n  const [majorNameInput, setMajorNameInput] = useState<string>(\"\");\n  const [collegeInput, setCollegeInput] = useState<string>(\"\");\n\n  const [add, setAdd] = useState<number>(-1);\n\n  const [checked, setChecked] = useState<number>(-1);\n\n  const [majorCodeInput, setMajorCodeInput] = useState<string>(\"\");\n\n  const handleDeleteButton = (majorId: number) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}`;\n    axios\n      .delete(url, config)\n      .then(() => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"삭제에 실패하였습니다.\");\n      });\n  };\n\n  const handleAddMajorInput = (e: any) => {\n    setAddMajorInput(e.target.value);\n  };\n\n  const handleModifyMajorButton = (edit: number, majorId: number) => {\n    setMajorNameInput(\"\");\n    if (edit != majorId) setEdit(majorId);\n    else setEdit(-1);\n  };\n\n  const handleMajorNameInput = (e: any) => {\n    setMajorNameInput(e.target.value);\n  };\n\n  const handleCollegeInput = (e: any) => {\n    setCollegeInput(e.target.value);\n  };\n\n  const handleAddSlaveButton = (majorId: number) => {\n    setAdd(majorId);\n  };\n\n  const handleMajorCodeInput = (e: any) => {\n    setMajorCodeInput(e.target.value);\n  };\n\n  const handleDoneSlaveButton = () => {\n    const url = `${API_BASE_URL}/admin/majors/${add}/hierarchy/${checked}`;\n    axios\n      .post(url, null, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .then(() => {\n        setAdd(-1);\n        setChecked(-1);\n      });\n  };\n\n  const handleSaveMajorButton = (\n    majorId: number,\n    input: { majorName: string; college: string; code: string }\n  ) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}`;\n    const data = {\n      name: input.majorName,\n      college: input.college,\n      code: input.code,\n    };\n    axios\n      .patch(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"수정에 실패하였습니다.\");\n      })\n      .finally(() => {\n        setEdit(-1);\n      });\n  };\n\n  const handleAddMajorCourseButton = (majorName: string) => {\n    const url = `${API_BASE_URL}/admin/majors`;\n    const data = {\n      name: majorName,\n    };\n    axios\n      .post(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e) => {\n        console.log(e);\n        alert(\"전공 추가에 실패하였습니다.\");\n      });\n  };\n\n  const handleCheckbox = (e: any) => {\n    setChecked(e.target.value);\n  };\n\n  const handleSlaveDeleteButton = (majorId: number, slaveId: number) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}/hierarchy/${slaveId}`;\n    axios.delete(url, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  const handleEnableButton = (majorId: number) => {\n    const url = `${API_BASE_URL}/admin/majors/${majorId}`;\n    const data = {\n      enableToggle: 1,\n    };\n    axios.patch(url, data, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  useEffect(() => {\n    const majorListUrl = `${API_BASE_URL}/admin/majors`;\n    axios.get(majorListUrl, config).then((res) => {\n      rowsHandler([...res.data]);\n      console.log(res.data);\n    });\n  }, [changeToggle]);\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {add == -1 ? <></> : <th></th>}\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n          <th>전공코드</th>\n\n          <th>en</th>\n          <th></th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row: any, index: number) => {\n          const slaveList = row.slaveList;\n          const majorId = row.id;\n          return (\n            <Fragment key={index}>\n              <tr>\n                {add == -1 ? (\n                  <></>\n                ) : (\n                  <>\n                    {add == majorId ? (\n                      <>\n                        <td></td>\n                      </>\n                    ) : (\n                      <>\n                        <TableData width={0.3}>\n                          <input\n                            type=\"checkbox\"\n                            name=\"_selected_\"\n                            value={row.id}\n                            onChange={handleCheckbox}\n                          />\n                        </TableData>\n                      </>\n                    )}\n                  </>\n                )}\n\n                <TableData width={0.3}>{row.id}</TableData>\n                {edit == majorId ? (\n                  <>\n                    <TableData width={2}>\n                      <Input\n                        value={majorNameInput}\n                        onChange={handleMajorNameInput}\n                      />\n                    </TableData>\n                    <TableData width={2}>\n                      <Input\n                        value={collegeInput}\n                        onChange={handleCollegeInput}\n                      />\n                    </TableData>\n                    <TableData width={2}>\n                      <Input\n                        value={majorCodeInput}\n                        onChange={handleMajorCodeInput}\n                      />\n                    </TableData>\n                  </>\n                ) : (\n                  <>\n                    <TableData width={8}>{row.name}</TableData>\n                    <TableData width={8}>{row.college}</TableData>\n                    <TableData width={8}>{row.code}</TableData>\n                    <TableData\n                      width={1}\n                      onClick={() => handleEnableButton(row.id)}>\n                      {row.enable ? \"1\" : \"0\"}\n                    </TableData>\n                  </>\n                )}\n                {add == majorId ? (\n                  <>\n                    <TableButton colSpan={3} onClick={handleDoneSlaveButton}>\n                      완료\n                    </TableButton>\n                  </>\n                ) : (\n                  <>\n                    <TableButton onClick={() => handleAddSlaveButton(majorId)}>\n                      추가\n                    </TableButton>\n                  </>\n                )}\n                {add == majorId ? (\n                  <></>\n                ) : (\n                  <>\n                    {edit == majorId ? (\n                      <>\n                        <TableButton\n                          onClick={() =>\n                            handleSaveMajorButton(majorId, {\n                              majorName: majorNameInput,\n                              college: collegeInput,\n                              code: majorCodeInput,\n                            })\n                          }>\n                          완료\n                        </TableButton>\n                      </>\n                    ) : (\n                      <TableButton\n                        onClick={() => {\n                          handleModifyMajorButton(edit, majorId);\n                          setMajorNameInput(row.name);\n                          setCollegeInput(row.college ? row.college : \"\");\n                          setMajorCodeInput(row.code ? row.code : \"\");\n                        }}>\n                        수정\n                      </TableButton>\n                    )}\n                    {edit == majorId ? (\n                      <>\n                        <TableButton\n                          onClick={() =>\n                            handleModifyMajorButton(edit, majorId)\n                          }>\n                          취소\n                        </TableButton>\n                      </>\n                    ) : (\n                      <>\n                        <TableButton\n                          onClick={() => handleDeleteButton(majorId)}>\n                          삭제\n                        </TableButton>\n                      </>\n                    )}\n                  </>\n                )}\n              </tr>\n\n              {slaveList.length > 0 &&\n                slaveList.map((slave: any, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableData width={2} colSpan={6}>\n                        {slave.name}\n                      </TableData>\n                      <TableButton\n                        onClick={() =>\n                          handleSlaveDeleteButton(majorId, slave.id)\n                        }\n                        colSpan={1}>\n                        삭제\n                      </TableButton>\n                    </tr>\n                  );\n                })}\n            </Fragment>\n          );\n        })}\n        <tr>\n          <td colSpan={3}>\n            <Input\n              width={20}\n              height={2}\n              placeholder=\"추가할 전공을 입력해주세요\"\n              onChange={handleAddMajorInput}\n            />\n          </td>\n          <td onClick={() => handleAddMajorCourseButton(addMajorInput)}>\n            추가\n          </td>\n        </tr>\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { API_BASE_URL } from \"../../config\";\n\nconst StyledTable = styled.table`\n  width: 26rem;\n  border-collapse: collapse;\n\n  th {\n    // border-top: 1px solid black;\n    // border-bottom: 1px solid black;\n    border-top: 0.1rem solid black;\n    border-bottom: 0.1rem solid black;\n  }\n\n  td {\n    width: 2rem;\n    padding: 0.3rem;\n    // border-bottom: 1px solid black;\n    border-bottom: 0.1rem solid black;\n    a:link {\n      color: #333;\n    }\n    a:visited {\n      color: #000;\n    }\n    a:hover {\n      color: #808080;\n    }\n    a:active {\n      color: #808080;\n    }\n  }\n\n  tbody {\n    width: 26rem;\n  }\n  tr {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\ntype MajorCourseType = {\n  id: number;\n  name: string;\n  number: string;\n  credit: number;\n  required: boolean;\n  abeek: string;\n  semester: string;\n};\n\nexport default function EditableMajorCourseTable(props: any) {\n  const columns = [\"ID\", \"과목명\", \"학수번호\", \"학점\", \"필수\"];\n  const majorId = props.majorId;\n\n  const [majorCourseList, setMajorCourseList] = useState<\n    Array<MajorCourseType>\n  >([]);\n  const [reload, setReload] = useState<boolean>(false);\n\n  const handleRequiredButton = async (majorId: number, courseId: number) => {\n    try {\n      const url = `${API_BASE_URL}/admin/majors/${majorId}/courses/${courseId}`;\n      await axios.patch(url);\n      await setReload(!reload);\n    } catch (e: any) {\n      alert(\"변경에 실패하였습니다.\");\n    }\n  };\n\n  const handleDeleteButton = async (majorId: number, courseId: number) => {\n    try {\n      const url = `${API_BASE_URL}/admin/majors/${majorId}/courses/${courseId}`;\n      await axios.delete(url);\n      await setReload(!reload);\n    } catch (e: any) {\n      alert(\"삭제에 실패하였습니다.\");\n    }\n  };\n\n  useEffect(() => {\n    const majorCourseListUrl = `${API_BASE_URL}/admin/majors/${majorId}/courses`;\n    axios.get(majorCourseListUrl).then((res) => {\n      setMajorCourseList([...res.data]);\n    });\n  }, [majorId, reload]);\n\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column: any, index: number) => (\n            <th key={index}>{column}</th>\n          ))}\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {majorCourseList.map((row: any, index: number) => {\n          const courseId = row.id;\n          return (\n            <tr key={index}>\n              <td>{row.id}</td>\n              <td>{row.name}</td>\n              <td>{row.number}</td>\n              <td>{row.credit}</td>\n              <td onClick={() => handleRequiredButton(majorId, courseId)}>\n                {row.required ? \"필수\" : \"\"}\n              </td>\n              <td onClick={() => handleDeleteButton(majorId, courseId)}>\n                삭제\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n}\n","import axios from \"axios\";\nimport styled from \"styled-components\";\nimport * as config from \"../config\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport PageTemplate from \"../components/PageTemplate\";\nimport { Stack } from \"@mui/material\";\n\nimport SearchInput from \"../components/input/SearchInput\";\nimport SearchButton from \"../components/button/SearchButton\";\nimport Table from \"../components/table/Table\";\nimport Divider from \"../components/Divider\";\nimport { useSearchParams } from \"react-router-dom\";\nimport EditableCourseTable from \"../components/table/EditableCourseTable\";\nimport EditableMajorTable from \"../components/table/EditableMajorTable\";\nimport EditableMajorCourseTable from \"../components/table/EditableMajorCourseTable\";\n\nconst BASE_URL = config.API_BASE_URL as string;\n\ninterface Props {}\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (event: any, number: number) => void;\n}\n\nconst StyledSelect = styled.select<{ width?: number }>`\n  width: ${({ width }) => (width ? width : 12)}rem;\n  height: 2rem;\n  text-align-last: center;\n  text-align: center;\n  border: 0.1rem black solid;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  font-weight: 700;\n`;\n\ntype CourseType = {\n  name: string;\n  number: string;\n  credit: number;\n};\n\ntype CourseListType = {\n  [key: number]: CourseType;\n};\n\nconst bold = {\n  fontWeight: 700,\n};\n\ntype TipType = {\n  tipTab: boolean;\n};\n\nfunction MajorSelection(props: any) {\n  const onChange: () => void = props.onChange;\n  const majorList: any = props.majorList;\n  return (\n    <StyledSelect name=\"major\" onChange={onChange}>\n      {majorList.map((major: any, index: number) => {\n        return (\n          <option value={major.id} key={index}>\n            {major.name}\n          </option>\n        );\n      })}\n    </StyledSelect>\n  );\n}\n\ntype majorType = {\n  id: number;\n  name: string;\n  code: string;\n  college: string;\n};\n\nexport default function AdminPage(props: any) {\n  const [rows, setRows] = useState<Array<CourseListType>>([]);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [hasSearch, setHasSearch] = useState<boolean>(false);\n  const [searchCount, setSearchCount] = useState<number>(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [majorList, setMajorList] = useState<any>([]);\n  const [major, setMajor] = useState<majorType>();\n  const [majorId, setMajorId] = useState<number>(1);\n  const [changeToggle, setChangeToggle] = useState<boolean>(false);\n  const config = {\n    withCredentials: true,\n  };\n\n  const handleMajorSelection = (event: any) => {\n    setMajorId(event.target.value);\n  };\n\n  const handleChangeSearchInput = (event: any) => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleSearchButton = (event: any) => {\n    const config = {\n      withCredentials: true,\n    };\n    searchInput.toUpperCase();\n\n    const url = BASE_URL + `/admin/courses?keyword=${searchInput}`;\n    axios.get(url, config).then((res) => {\n      const courseList = res.data;\n      setRows([...courseList]);\n      if (courseList.length > 0) {\n        setHasSearch(true);\n      }\n      setSearchCount(courseList.length);\n    });\n  };\n\n  const handleAddMajorCourseButton = (majorId: number, courseId: number) => {\n    const url = `${BASE_URL}/admin/majors/${majorId}/courses/${courseId}`;\n    axios.post(url, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  const handleDeleteMajorCourse = (majorId: number, courseId: number) => {\n    const url = BASE_URL + `/admin/majors/${majorId}/courses/${courseId}`;\n    axios.delete(url, config).then(() => {\n      setChangeToggle(!changeToggle);\n    });\n  };\n\n  const handleAddMajorButton = (majorName: string) => {\n    const url = `${BASE_URL}/admin/majors`;\n    const data = {\n      name: majorName,\n    };\n    axios\n      .post(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e) => {\n        console.log(e);\n        alert(\"전공 추가에 실패하였습니다.\");\n      });\n  };\n\n  const handleSaveMajorButton = (\n    majorId: number,\n    input: { majorName: string; college: string },\n    setEdit: (edit: number) => void\n  ) => {\n    const url = `${BASE_URL}/admin/majors/${majorId}`;\n    const data = {\n      name: input.majorName,\n      college: input.college,\n    };\n    axios\n      .patch(url, data, config)\n      .then((res) => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"수정에 실패하였습니다.\");\n      })\n      .finally(() => {\n        setEdit(-1);\n      });\n  };\n\n  const handleDeleteMajorButton = (majorId: number) => {\n    const url = `${BASE_URL}/admin/majors/${majorId}`;\n    axios\n      .delete(url, config)\n      .then(() => {\n        setChangeToggle(!changeToggle);\n      })\n      .catch((e: any) => {\n        console.log(e);\n        alert(\"삭제에 실패하였습니다.\");\n      });\n  };\n\n  useEffect(() => {\n    /* 초기 렌더링 */\n    const keyword = searchParams.get(\"keyword\");\n    const command = searchParams.get(\"command\");\n\n    if (keyword != null) {\n      if (keyword.length < 2) {\n        alert(\"2글자 이상 입력해주세요.\");\n        return;\n      }\n      const url =\n        command == null\n          ? BASE_URL + `/courses?keyword=${keyword}`\n          : BASE_URL + `/courses?keyword=${keyword}&command=${command}`;\n\n      axios.get(url, config).then((res) => {\n        const courseList = res.data.courses;\n        setSearchCount(courseList.length);\n        setHasSearch(true);\n        setRows([...courseList]);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <PageTemplate>\n        <Stack\n          direction=\"column\"\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"center\">\n          <EditableMajorTable\n            rows={majorList}\n            majorId={majorId}\n            rowsHandler={setMajorList}\n          />\n          <MajorSelection\n            majorList={majorList}\n            onChange={handleMajorSelection}\n          />\n          <div>{major && major.name} 전공과목 리스트</div>\n          <EditableMajorCourseTable\n            majorId={majorId}\n            handleDeleteButton={handleDeleteMajorCourse}\n          />\n          <Stack direction=\"row\" spacing={1}>\n            <SearchInput onChange={handleChangeSearchInput} />\n            <SearchButton onClick={handleSearchButton} />\n          </Stack>\n          <EditableCourseTable\n            majorId={majorId}\n            handleAddButton={handleAddMajorCourseButton}\n            rows={rows}\n            columns={[\"과목명\", \"학수번호\", \"학점\"]}\n          />\n        </Stack>\n      </PageTemplate>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MainPage from \"./pages/MainPage\";\n\nimport \"./App.css\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport TakenPage from \"./pages/TakenPage\";\nimport GraduationPage from \"./pages/GraduationPage\";\nimport CoursesPage from \"./pages/CoursesPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"./modules\";\nimport ProtectedRoute from \"./lib/ProtectedRoute\";\nimport { useEffect, useState } from \"react\";\nimport { API_BASE_URL } from \"./config\";\nimport axios from \"axios\";\nimport { loginUser, logoutUser } from \"./modules/auth\";\nimport AdminPage from \"./pages/AdminPage\";\n\nexport interface AppProps {}\n\nexport default function App(props: AppProps) {\n  const isLogin = useSelector((state: RootState) => state.auth.isLogin);\n\n  return (\n    <>\n      <GlobalStyles />\n      <Router>\n        <Routes location={location}>\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route\n            path=\"/users/courses\"\n            element={\n              <ProtectedRoute isLogin={isLogin} outlet={<TakenPage />} />\n            }\n          />\n          <Route\n            path=\"/users/graduation\"\n            element={\n              <ProtectedRoute isLogin={isLogin} outlet={<GraduationPage />} />\n            }\n          />\n          <Route path=\"/courses\" element={<CoursesPage />} />\n          <Route path=\"/admin\" element={<AdminPage />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const TOGGLE_MENU = \"menu/TOGGLE\" as const;\nconst CLOSE_MENU = \"menu/CLOSE\" as const;\n\nexport const ToggleMenu = () => ({\n  type: TOGGLE_MENU,\n});\n\nexport const setMenuClose = () => ({\n  type: CLOSE_MENU,\n});\n\ntype MenuState = {\n  open: boolean;\n};\n\nconst initialState: MenuState = {\n  open: false,\n};\n\ntype MenuAction =\n  | ReturnType<typeof ToggleMenu>\n  | ReturnType<typeof setMenuClose>;\n\nfunction menu(state: MenuState = initialState, action: MenuAction) {\n  switch (action.type) {\n    case TOGGLE_MENU:\n      return { open: !state.open };\n    case CLOSE_MENU:\n      return { open: false };\n    default:\n      return state;\n  }\n}\n\nexport default menu;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport menu from \"./menu\";\n\nconst rootReducer = combineReducers({ auth, menu });\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./modules\";\nimport axios from \"axios\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_STATE__,\n  composeWithDevTools()\n);\n\naxios.defaults.withCredentials = true;\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}